{"version":3,"sources":["jquery-ui-timepicker-addon.js"],"names":["factory","$","ui","timepicker","version","extend","Timepicker","this","regional","currentText","closeText","amNames","pmNames","timeFormat","timeSuffix","timeOnlyTitle","timeText","hourText","minuteText","secondText","millisecText","microsecText","timezoneText","isRTL","_defaults","showButtonPanel","timeOnly","timeOnlyShowDate","showHour","showMinute","showSecond","showMillisec","showMicrosec","showTimezone","showTime","stepHour","stepMinute","stepSecond","stepMillisec","stepMicrosec","hour","minute","second","millisec","microsec","timezone","hourMin","minuteMin","secondMin","millisecMin","microsecMin","hourMax","minuteMax","secondMax","millisecMax","microsecMax","minDateTime","maxDateTime","maxTime","minTime","onSelect","hourGrid","minuteGrid","secondGrid","millisecGrid","microsecGrid","alwaysSetTime","separator","altFieldTimeOnly","altTimeFormat","altSeparator","altTimeSuffix","altRedirectFocus","pickerTimeFormat","pickerTimeSuffix","showTimepicker","timezoneList","addSliderAccess","sliderAccessArgs","controlType","oneLine","defaultValue","parse","afterInject","prototype","$input","$altInput","$timeObj","inst","hour_slider","minute_slider","second_slider","millisec_slider","microsec_slider","timezone_select","hourMinOriginal","minuteMinOriginal","secondMinOriginal","millisecMinOriginal","microsecMinOriginal","hourMaxOriginal","minuteMaxOriginal","secondMaxOriginal","millisecMaxOriginal","microsecMaxOriginal","ampm","formattedDate","formattedTime","formattedDateTime","units","support","control","setDefaults","settings","extendRemove","_newInst","opts","tp_inst","inlineSettings","fns","overrides","i","attrName","hasOwnProperty","attrValue","attr","eval","err","beforeShow","input","dp_inst","isFunction","evnts","call","onChangeMonthYear","year","month","onClose","dateText","timeDefined","val","_updateDateTime","map","toUpperCase","detectSupport","slider","_controls","tzl","length","tzi","tzv","_typeof","value","label","timezoneOffsetString","iso8601","timezoneOffsetNumber","Date","getTimezoneOffset","altField","css","cursor","focus","trigger","minDate","maxDate","undefined","getTime","bind","_onFocus","_addTimePicker","currDT","trim","_parseTime","_limitMinMaxDateTime","_injectTimePicker","_afterInject","timeString","withDate","datepicker","_getInst","dp_dateFormat","_get","parseRes","parseDateTimeInternal","_getFormatConfig","timeObj","log","parseTime","o","$dp","dpDiv","litem","uitem","show","max","gridSize","size","l","find","noDisplay","html","timeInput","substr","parseInt","h","tmph","formatTime","m","showTz","$tp","prepend","hide","create","width","marginLeft","marginRight","borderCollapse","click","e","$t","n","replace","ap","f","data","indexOf","_onTimeChange","_onSelectHandler","textAlign","overflow","append","fn","apply","idx","text","selectedYear","selectedMonth","selectedDay","selectLocalTimezone","change","$buttonPanel","before","parsedTime","update","setHours","setMinutes","setSeconds","_setTime","blur","rtl","setTimeout","sliderAccess","sliderAccessWidth","outerWidth","each","$g","oldWidth","oldMarginLeft","toString","newWidth","newMarginLeft","adjustSliders","dp_date","minDateTimeDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getMicroseconds","maxDateTimeDate","tempMinTime","tempMaxTime","minMax","secMax","options","min","step","hasChanged","inArray","inputEl","dtTmp","currentYear","currentMonth","currentDay","dt","_daylightSavingAdjust","dateFmt","formatCfg","timeAvailable","formatDate","lastVal","altFormattedDateTime","altFormat","get","_updateDatepicker","obj","unit","prop","orientation","slide","event","stop","Math","abs","select","sel","format","children","remove","appendTo","tmp_args","Array","slice","arguments","datetimepicker","parseDateTime","dateFormat","dateTimeString","dateSettings","timeSettings","t","date","setMicroseconds","strictParse","s","treg","regstr","match","markers","ml","charAt","toLowerCase","merge","join","order","finds","orders","c","z","getFormatPositions","resTime","RegExp","x","Number","d","isNaN","err2","looseParse","time","tmptime","ampmName","convert24to12","_base_selectDate","_selectDate","id","dateStr","was_inline","inline","stay_open","_notifyChange","_base_updateDatepicker","_curInst","_datepickerShowing","_lastInput","_base_doKeyPress","_doKeyPress","target","tz","dateChars","_possibleChars","datetimeChars","chr","String","fromCharCode","charCode","keyCode","ctrlKey","_base_updateAlternate","_updateAlternate","_getDate","_base_doKeyUp","_doKeyUp","_base_gotoToday","_gotoToday","tzoffset","now","_setDate","_disableTimepickerDatepicker","_enableTimepickerDatepicker","defaults","_setTimeDatepicker","tp_date","_setDateFromField","_base_setDateDatepicker","_setDateDatepicker","_date","timezoneAdjust","_base_getDateDatepicker","_getDateDatepicker","noDefault","tagName","_base_parseDate","parseDate","substring","_base_formatDate","_formatDate","day","_base_optionDatepicker","_optionDatepicker","name","name_clone","ret","oldVal","$target","onselect","isEmptyObject","props","tf","isIn","computeEffectiveSetting","property","splitDateTime","timePartsLen","split","allParts","allPartsLen","dateString","splice","parts","tzMinutes","minutes","hours","iso","tzString","normalized","test","fromTimezone","toTimezone","fromTz","toTz","timeRange","startTime","endTime","handleRange","datetimeRange","dateRange","method","minInterval","maxInterval","start","end","checkDates","changed","other","startdt","enddt","changeddt","setMilliseconds","selected","option","selectedDateTime","window","console","_util","_extendRemove","_isEmptyObject","_convert24to12","_detectSupport","_selectLocalTimezone","_computeEffectiveSetting","_splitDateTime","_parseDateTimeInternal","microseconds","floor","define","amd","jQuery"],"mappings":"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","sourcesContent":["/*! jQuery Timepicker Addon - v1.6.3 - 2016-04-20\n* http://trentrichardson.com/examples/timepicker\n* Copyright (c) 2016 Trent Richardson; Licensed MIT */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery', 'jquery-ui'], factory);\n\t} else {\n\t\tfactory(jQuery);\n\t}\n}(function ($) {\n\n\t/*\n\t* Lets not redefine timepicker, Prevent \"Uncaught RangeError: Maximum call stack size exceeded\"\n\t*/\n\t$.ui.timepicker = $.ui.timepicker || {};\n\tif ($.ui.timepicker.version) {\n\t\treturn;\n\t}\n\n\t/*\n\t* Extend jQueryUI, get it started with our version number\n\t*/\n\t$.extend($.ui, {\n\t\ttimepicker: {\n\t\t\tversion: \"1.6.3\"\n\t\t}\n\t});\n\n\t/*\n\t* Timepicker manager.\n\t* Use the singleton instance of this class, $.timepicker, to interact with the time picker.\n\t* Settings for (groups of) time pickers are maintained in an instance object,\n\t* allowing multiple different settings on the same page.\n\t*/\n\tvar Timepicker = function () {\n\t\tthis.regional = []; // Available regional settings, indexed by language code\n\t\tthis.regional[''] = { // Default regional settings\n\t\t\tcurrentText: 'Now',\n\t\t\tcloseText: 'Done',\n\t\t\tamNames: ['AM', 'A'],\n\t\t\tpmNames: ['PM', 'P'],\n\t\t\ttimeFormat: 'HH:mm',\n\t\t\ttimeSuffix: '',\n\t\t\ttimeOnlyTitle: 'Choose Time',\n\t\t\ttimeText: 'Time',\n\t\t\thourText: 'Hour',\n\t\t\tminuteText: 'Minute',\n\t\t\tsecondText: 'Second',\n\t\t\tmillisecText: 'Millisecond',\n\t\t\tmicrosecText: 'Microsecond',\n\t\t\ttimezoneText: 'Time Zone',\n\t\t\tisRTL: false\n\t\t};\n\t\tthis._defaults = { // Global defaults for all the datetime picker instances\n\t\t\tshowButtonPanel: true,\n\t\t\ttimeOnly: false,\n\t\t\ttimeOnlyShowDate: false,\n\t\t\tshowHour: null,\n\t\t\tshowMinute: null,\n\t\t\tshowSecond: null,\n\t\t\tshowMillisec: null,\n\t\t\tshowMicrosec: null,\n\t\t\tshowTimezone: null,\n\t\t\tshowTime: true,\n\t\t\tstepHour: 1,\n\t\t\tstepMinute: 1,\n\t\t\tstepSecond: 1,\n\t\t\tstepMillisec: 1,\n\t\t\tstepMicrosec: 1,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tmillisec: 0,\n\t\t\tmicrosec: 0,\n\t\t\ttimezone: null,\n\t\t\thourMin: 0,\n\t\t\tminuteMin: 0,\n\t\t\tsecondMin: 0,\n\t\t\tmillisecMin: 0,\n\t\t\tmicrosecMin: 0,\n\t\t\thourMax: 23,\n\t\t\tminuteMax: 59,\n\t\t\tsecondMax: 59,\n\t\t\tmillisecMax: 999,\n\t\t\tmicrosecMax: 999,\n\t\t\tminDateTime: null,\n\t\t\tmaxDateTime: null,\n\t\t\tmaxTime: null,\n\t\t\tminTime: null,\n\t\t\tonSelect: null,\n\t\t\thourGrid: 0,\n\t\t\tminuteGrid: 0,\n\t\t\tsecondGrid: 0,\n\t\t\tmillisecGrid: 0,\n\t\t\tmicrosecGrid: 0,\n\t\t\talwaysSetTime: true,\n\t\t\tseparator: ' ',\n\t\t\taltFieldTimeOnly: true,\n\t\t\taltTimeFormat: null,\n\t\t\taltSeparator: null,\n\t\t\taltTimeSuffix: null,\n\t\t\taltRedirectFocus: true,\n\t\t\tpickerTimeFormat: null,\n\t\t\tpickerTimeSuffix: null,\n\t\t\tshowTimepicker: true,\n\t\t\ttimezoneList: null,\n\t\t\taddSliderAccess: false,\n\t\t\tsliderAccessArgs: null,\n\t\t\tcontrolType: 'slider',\n\t\t\toneLine: false,\n\t\t\tdefaultValue: null,\n\t\t\tparse: 'strict',\n\t\t\tafterInject: null\n\t\t};\n\t\t$.extend(this._defaults, this.regional['']);\n\t};\n\n\t$.extend(Timepicker.prototype, {\n\t\t$input: null,\n\t\t$altInput: null,\n\t\t$timeObj: null,\n\t\tinst: null,\n\t\thour_slider: null,\n\t\tminute_slider: null,\n\t\tsecond_slider: null,\n\t\tmillisec_slider: null,\n\t\tmicrosec_slider: null,\n\t\ttimezone_select: null,\n\t\tmaxTime: null,\n\t\tminTime: null,\n\t\thour: 0,\n\t\tminute: 0,\n\t\tsecond: 0,\n\t\tmillisec: 0,\n\t\tmicrosec: 0,\n\t\ttimezone: null,\n\t\thourMinOriginal: null,\n\t\tminuteMinOriginal: null,\n\t\tsecondMinOriginal: null,\n\t\tmillisecMinOriginal: null,\n\t\tmicrosecMinOriginal: null,\n\t\thourMaxOriginal: null,\n\t\tminuteMaxOriginal: null,\n\t\tsecondMaxOriginal: null,\n\t\tmillisecMaxOriginal: null,\n\t\tmicrosecMaxOriginal: null,\n\t\tampm: '',\n\t\tformattedDate: '',\n\t\tformattedTime: '',\n\t\tformattedDateTime: '',\n\t\ttimezoneList: null,\n\t\tunits: ['hour', 'minute', 'second', 'millisec', 'microsec'],\n\t\tsupport: {},\n\t\tcontrol: null,\n\n\t\t/*\n\t\t* Override the default settings for all instances of the time picker.\n\t\t* @param  {Object} settings  object - the new settings to use as defaults (anonymous object)\n\t\t* @return {Object} the manager object\n\t\t*/\n\t\tsetDefaults: function (settings) {\n\t\t\textendRemove(this._defaults, settings || {});\n\t\t\treturn this;\n\t\t},\n\n\t\t/*\n\t\t* Create a new Timepicker instance\n\t\t*/\n\t\t_newInst: function ($input, opts) {\n\t\t\tvar tp_inst = new Timepicker(),\n\t\t\t\tinlineSettings = {},\n\t\t\t\tfns = {},\n\t\t\t\toverrides, i;\n\n\t\t\tfor (var attrName in this._defaults) {\n\t\t\t\tif (this._defaults.hasOwnProperty(attrName)) {\n\t\t\t\t\tvar attrValue = $input.attr('time:' + attrName);\n\t\t\t\t\tif (attrValue) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tinlineSettings[attrName] = eval(attrValue);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tinlineSettings[attrName] = attrValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toverrides = {\n\t\t\t\tbeforeShow: function (input, dp_inst) {\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {\n\t\t\t\t\t\treturn tp_inst._defaults.evnts.beforeShow.call($input[0], input, dp_inst, tp_inst);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonChangeMonthYear: function (year, month, dp_inst) {\n\t\t\t\t\t// Update the time as well : this prevents the time from disappearing from the $input field.\n\t\t\t\t\t// tp_inst._updateDateTime(dp_inst);\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)) {\n\t\t\t\t\t\ttp_inst._defaults.evnts.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonClose: function (dateText, dp_inst) {\n\t\t\t\t\tif (tp_inst.timeDefined === true && $input.val() !== '') {\n\t\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\n\t\t\t\t\t}\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onClose)) {\n\t\t\t\t\t\ttp_inst._defaults.evnts.onClose.call($input[0], dateText, dp_inst, tp_inst);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tfor (i in overrides) {\n\t\t\t\tif (overrides.hasOwnProperty(i)) {\n\t\t\t\t\tfns[i] = opts[i] || this._defaults[i] || null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {\n\t\t\t\tevnts: fns,\n\t\t\t\ttimepicker: tp_inst // add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\n\t\t\t});\n\t\t\ttp_inst.amNames = $.map(tp_inst._defaults.amNames, function (val) {\n\t\t\t\treturn val.toUpperCase();\n\t\t\t});\n\t\t\ttp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (val) {\n\t\t\t\treturn val.toUpperCase();\n\t\t\t});\n\n\t\t\t// detect which units are supported\n\t\t\ttp_inst.support = detectSupport(\n\t\t\t\t\ttp_inst._defaults.timeFormat +\n\t\t\t\t\t(tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : '') +\n\t\t\t\t\t(tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : ''));\n\n\t\t\t// controlType is string - key to our this._controls\n\t\t\tif (typeof(tp_inst._defaults.controlType) === 'string') {\n\t\t\t\tif (tp_inst._defaults.controlType === 'slider' && typeof($.ui.slider) === 'undefined') {\n\t\t\t\t\ttp_inst._defaults.controlType = 'select';\n\t\t\t\t}\n\t\t\t\ttp_inst.control = tp_inst._controls[tp_inst._defaults.controlType];\n\t\t\t}\n\t\t\t// controlType is an object and must implement create, options, value methods\n\t\t\telse {\n\t\t\t\ttp_inst.control = tp_inst._defaults.controlType;\n\t\t\t}\n\n\t\t\t// prep the timezone options\n\t\t\tvar timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60,\n\t\t\t\t\t0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];\n\t\t\tif (tp_inst._defaults.timezoneList !== null) {\n\t\t\t\ttimezoneList = tp_inst._defaults.timezoneList;\n\t\t\t}\n\t\t\tvar tzl = timezoneList.length, tzi = 0, tzv = null;\n\t\t\tif (tzl > 0 && typeof timezoneList[0] !== 'object') {\n\t\t\t\tfor (; tzi < tzl; tzi++) {\n\t\t\t\t\ttzv = timezoneList[tzi];\n\t\t\t\t\ttimezoneList[tzi] = { value: tzv, label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601) };\n\t\t\t\t}\n\t\t\t}\n\t\t\ttp_inst._defaults.timezoneList = timezoneList;\n\n\t\t\t// set the default units\n\t\t\ttp_inst.timezone = tp_inst._defaults.timezone !== null ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) :\n\t\t\t\t\t\t\t((new Date()).getTimezoneOffset() * -1);\n\t\t\ttp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin :\n\t\t\t\t\t\t\ttp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour;\n\t\t\ttp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin :\n\t\t\t\t\t\t\ttp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute;\n\t\t\ttp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin :\n\t\t\t\t\t\t\ttp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second;\n\t\t\ttp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin :\n\t\t\t\t\t\t\ttp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec;\n\t\t\ttp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin :\n\t\t\t\t\t\t\ttp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec;\n\t\t\ttp_inst.ampm = '';\n\t\t\ttp_inst.$input = $input;\n\n\t\t\tif (tp_inst._defaults.altField) {\n\t\t\t\ttp_inst.$altInput = $(tp_inst._defaults.altField);\n\t\t\t\tif (tp_inst._defaults.altRedirectFocus === true) {\n\t\t\t\t\ttp_inst.$altInput.css({\n\t\t\t\t\t\tcursor: 'pointer'\n\t\t\t\t\t}).focus(function () {\n\t\t\t\t\t\t$input.trigger(\"focus\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tp_inst._defaults.minDate === 0 || tp_inst._defaults.minDateTime === 0) {\n\t\t\t\ttp_inst._defaults.minDate = new Date();\n\t\t\t}\n\t\t\tif (tp_inst._defaults.maxDate === 0 || tp_inst._defaults.maxDateTime === 0) {\n\t\t\t\ttp_inst._defaults.maxDate = new Date();\n\t\t\t}\n\n\t\t\t// datepicker needs minDate/maxDate, timepicker needs minDateTime/maxDateTime..\n\t\t\tif (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {\n\t\t\t\ttp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\n\t\t\t}\n\t\t\tif (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {\n\t\t\t\ttp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\n\t\t\t}\n\t\t\tif (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {\n\t\t\t\ttp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\n\t\t\t}\n\t\t\tif (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {\n\t\t\t\ttp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\n\t\t\t}\n\t\t\ttp_inst.$input.bind('focus', function () {\n\t\t\t\ttp_inst._onFocus();\n\t\t\t});\n\n\t\t\treturn tp_inst;\n\t\t},\n\n\t\t/*\n\t\t* add our sliders to the calendar\n\t\t*/\n\t\t_addTimePicker: function (dp_inst) {\n\t\t\tvar currDT = $.trim((this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + ' ' + this.$altInput.val() : this.$input.val());\n\n\t\t\tthis.timeDefined = this._parseTime(currDT);\n\t\t\tthis._limitMinMaxDateTime(dp_inst, false);\n\t\t\tthis._injectTimePicker();\n\t\t\tthis._afterInject();\n\t\t},\n\n\t\t/*\n\t\t* parse the time string from input value or _setTime\n\t\t*/\n\t\t_parseTime: function (timeString, withDate) {\n\t\t\tif (!this.inst) {\n\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\n\t\t\t}\n\n\t\t\tif (withDate || !this._defaults.timeOnly) {\n\t\t\t\tvar dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\n\t\t\t\ttry {\n\t\t\t\t\tvar parseRes = parseDateTimeInternal(dp_dateFormat, this._defaults.timeFormat, timeString, $.datepicker._getFormatConfig(this.inst), this._defaults);\n\t\t\t\t\tif (!parseRes.timeObj) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t$.extend(this, parseRes.timeObj);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t$.timepicker.log(\"Error parsing the date/time string: \" + err +\n\t\t\t\t\t\t\t\t\t\"\\ndate/time string = \" + timeString +\n\t\t\t\t\t\t\t\t\t\"\\ntimeFormat = \" + this._defaults.timeFormat +\n\t\t\t\t\t\t\t\t\t\"\\ndateFormat = \" + dp_dateFormat);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tvar timeObj = $.datepicker.parseTime(this._defaults.timeFormat, timeString, this._defaults);\n\t\t\t\tif (!timeObj) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t$.extend(this, timeObj);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* Handle callback option after injecting timepicker\n\t\t*/\n\t\t_afterInject: function() {\n\t\t\tvar o = this.inst.settings;\n\t\t\tif ($.isFunction(o.afterInject)) {\n\t\t\t\to.afterInject.call(this);\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* generate and inject html for timepicker into ui datepicker\n\t\t*/\n\t\t_injectTimePicker: function () {\n\t\t\tvar $dp = this.inst.dpDiv,\n\t\t\t\to = this.inst.settings,\n\t\t\t\ttp_inst = this,\n\t\t\t\tlitem = '',\n\t\t\t\tuitem = '',\n\t\t\t\tshow = null,\n\t\t\t\tmax = {},\n\t\t\t\tgridSize = {},\n\t\t\t\tsize = null,\n\t\t\t\ti = 0,\n\t\t\t\tl = 0;\n\n\t\t\t// Prevent displaying twice\n\t\t\tif ($dp.find(\"div.ui-timepicker-div\").length === 0 && o.showTimepicker) {\n\t\t\t\tvar noDisplay = ' ui_tpicker_unit_hide',\n\t\t\t\t\thtml = '<div class=\"ui-timepicker-div' + (o.isRTL ? ' ui-timepicker-rtl' : '') + (o.oneLine && o.controlType === 'select' ? ' ui-timepicker-oneLine' : '') + '\"><dl>' + '<dt class=\"ui_tpicker_time_label' + ((o.showTime) ? '' : noDisplay) + '\">' + o.timeText + '</dt>' +\n\t\t\t\t\t\t\t\t'<dd class=\"ui_tpicker_time '+ ((o.showTime) ? '' : noDisplay) + '\"><input class=\"ui_tpicker_time_input\" ' + (o.timeInput ? '' : 'disabled') + '/></dd>';\n\n\t\t\t\t// Create the markup\n\t\t\t\tfor (i = 0, l = this.units.length; i < l; i++) {\n\t\t\t\t\tlitem = this.units[i];\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\n\n\t\t\t\t\t// Added by Peter Medeiros:\n\t\t\t\t\t// - Figure out what the hour/minute/second max should be based on the step values.\n\t\t\t\t\t// - Example: if stepMinute is 15, then minMax is 45.\n\t\t\t\t\tmax[litem] = parseInt((o[litem + 'Max'] - ((o[litem + 'Max'] - o[litem + 'Min']) % o['step' + uitem])), 10);\n\t\t\t\t\tgridSize[litem] = 0;\n\n\t\t\t\t\thtml += '<dt class=\"ui_tpicker_' + litem + '_label' + (show ? '' : noDisplay) + '\">' + o[litem + 'Text'] + '</dt>' +\n\t\t\t\t\t\t\t\t'<dd class=\"ui_tpicker_' + litem + (show ? '' : noDisplay) + '\"><div class=\"ui_tpicker_' + litem + '_slider' + (show ? '' : noDisplay) + '\"></div>';\n\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\n\t\t\t\t\t\thtml += '<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\n\n\t\t\t\t\t\tif (litem === 'hour') {\n\t\t\t\t\t\t\tfor (var h = o[litem + 'Min']; h <= max[litem]; h += parseInt(o[litem + 'Grid'], 10)) {\n\t\t\t\t\t\t\t\tgridSize[litem]++;\n\t\t\t\t\t\t\t\tvar tmph = $.datepicker.formatTime(this.support.ampm ? 'hht' : 'HH', {hour: h}, o);\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + tmph + '</td>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfor (var m = o[litem + 'Min']; m <= max[litem]; m += parseInt(o[litem + 'Grid'], 10)) {\n\t\t\t\t\t\t\t\tgridSize[litem]++;\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + ((m < 10) ? '0' : '') + m + '</td>';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thtml += '</tr></table></div>';\n\t\t\t\t\t}\n\t\t\t\t\thtml += '</dd>';\n\t\t\t\t}\n\n\t\t\t\t// Timezone\n\t\t\t\tvar showTz = o.showTimezone !== null ? o.showTimezone : this.support.timezone;\n\t\t\t\thtml += '<dt class=\"ui_tpicker_timezone_label' + (showTz ? '' : noDisplay) + '\">' + o.timezoneText + '</dt>';\n\t\t\t\thtml += '<dd class=\"ui_tpicker_timezone' + (showTz ? '' : noDisplay) + '\"></dd>';\n\n\t\t\t\t// Create the elements from string\n\t\t\t\thtml += '</dl></div>';\n\t\t\t\tvar $tp = $(html);\n\n\t\t\t\t// if we only want time picker...\n\t\t\t\tif (o.timeOnly === true) {\n\t\t\t\t\t$tp.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' + '<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '</div>' + '</div>');\n\t\t\t\t\t$dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\n\t\t\t\t}\n\n\t\t\t\t// add sliders, adjust grids, add events\n\t\t\t\tfor (i = 0, l = tp_inst.units.length; i < l; i++) {\n\t\t\t\t\tlitem = tp_inst.units[i];\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\n\n\t\t\t\t\t// add the slider\n\t\t\t\t\ttp_inst[litem + '_slider'] = tp_inst.control.create(tp_inst, $tp.find('.ui_tpicker_' + litem + '_slider'), litem, tp_inst[litem], o[litem + 'Min'], max[litem], o['step' + uitem]);\n\n\t\t\t\t\t// adjust the grid and add click event\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\n\t\t\t\t\t\tsize = 100 * gridSize[litem] * o[litem + 'Grid'] / (max[litem] - o[litem + 'Min']);\n\t\t\t\t\t\t$tp.find('.ui_tpicker_' + litem + ' table').css({\n\t\t\t\t\t\t\twidth: size + \"%\",\n\t\t\t\t\t\t\tmarginLeft: o.isRTL ? '0' : ((size / (-2 * gridSize[litem])) + \"%\"),\n\t\t\t\t\t\t\tmarginRight: o.isRTL ? ((size / (-2 * gridSize[litem])) + \"%\") : '0',\n\t\t\t\t\t\t\tborderCollapse: 'collapse'\n\t\t\t\t\t\t}).find(\"td\").click(function (e) {\n\t\t\t\t\t\t\t\tvar $t = $(this),\n\t\t\t\t\t\t\t\t\th = $t.html(),\n\t\t\t\t\t\t\t\t\tn = parseInt(h.replace(/[^0-9]/g), 10),\n\t\t\t\t\t\t\t\t\tap = h.replace(/[^apm]/ig),\n\t\t\t\t\t\t\t\t\tf = $t.data('for'); // loses scope, so we use data-for\n\n\t\t\t\t\t\t\t\tif (f === 'hour') {\n\t\t\t\t\t\t\t\t\tif (ap.indexOf('p') !== -1 && n < 12) {\n\t\t\t\t\t\t\t\t\t\tn += 12;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tif (ap.indexOf('a') !== -1 && n === 12) {\n\t\t\t\t\t\t\t\t\t\t\tn = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, tp_inst[f + '_slider'], litem, n);\n\n\t\t\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t\t\t}).css({\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\twidth: (100 / gridSize[litem]) + '%',\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} // end if grid > 0\n\t\t\t\t} // end for loop\n\n\t\t\t\t// Add timezone options\n\t\t\t\tthis.timezone_select = $tp.find('.ui_tpicker_timezone').append('<select></select>').find(\"select\");\n\t\t\t\t$.fn.append.apply(this.timezone_select,\n\t\t\t\t$.map(o.timezoneList, function (val, idx) {\n\t\t\t\t\treturn $(\"<option />\").val(typeof val === \"object\" ? val.value : val).text(typeof val === \"object\" ? val.label : val);\n\t\t\t\t}));\n\t\t\t\tif (typeof(this.timezone) !== \"undefined\" && this.timezone !== null && this.timezone !== \"\") {\n\t\t\t\t\tvar local_timezone = (new Date(this.inst.selectedYear, this.inst.selectedMonth, this.inst.selectedDay, 12)).getTimezoneOffset() * -1;\n\t\t\t\t\tif (local_timezone === this.timezone) {\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.timezone_select.val(this.timezone);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof(this.hour) !== \"undefined\" && this.hour !== null && this.hour !== \"\") {\n\t\t\t\t\t\tthis.timezone_select.val(o.timezone);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.timezone_select.change(function () {\n\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\ttp_inst._afterInject();\n\t\t\t\t});\n\t\t\t\t// End timezone options\n\n\t\t\t\t// inject timepicker into datepicker\n\t\t\t\tvar $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\n\t\t\t\tif ($buttonPanel.length) {\n\t\t\t\t\t$buttonPanel.before($tp);\n\t\t\t\t} else {\n\t\t\t\t\t$dp.append($tp);\n\t\t\t\t}\n\n\t\t\t\tthis.$timeObj = $tp.find('.ui_tpicker_time_input');\n\t\t\t\tthis.$timeObj.change(function () {\n\t\t\t\t\tvar timeFormat = tp_inst.inst.settings.timeFormat;\n\t\t\t\t\tvar parsedTime = $.datepicker.parseTime(timeFormat, this.value);\n\t\t\t\t\tvar update = new Date();\n\t\t\t\t\tif (parsedTime) {\n\t\t\t\t\t\tupdate.setHours(parsedTime.hour);\n\t\t\t\t\t\tupdate.setMinutes(parsedTime.minute);\n\t\t\t\t\t\tupdate.setSeconds(parsedTime.second);\n\t\t\t\t\t\t$.datepicker._setTime(tp_inst.inst, update);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.value = tp_inst.formattedTime;\n\t\t\t\t\t\tthis.blur();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.inst !== null) {\n\t\t\t\t\tvar timeDefined = this.timeDefined;\n\t\t\t\t\tthis._onTimeChange();\n\t\t\t\t\tthis.timeDefined = timeDefined;\n\t\t\t\t}\n\n\t\t\t\t// slideAccess integration: http://trentrichardson.com/2011/11/11/jquery-ui-sliders-and-touch-accessibility/\n\t\t\t\tif (this._defaults.addSliderAccess) {\n\t\t\t\t\tvar sliderAccessArgs = this._defaults.sliderAccessArgs,\n\t\t\t\t\t\trtl = this._defaults.isRTL;\n\t\t\t\t\tsliderAccessArgs.isRTL = rtl;\n\n\t\t\t\t\tsetTimeout(function () { // fix for inline mode\n\t\t\t\t\t\tif ($tp.find('.ui-slider-access').length === 0) {\n\t\t\t\t\t\t\t$tp.find('.ui-slider:visible').sliderAccess(sliderAccessArgs);\n\n\t\t\t\t\t\t\t// fix any grids since sliders are shorter\n\t\t\t\t\t\t\tvar sliderAccessWidth = $tp.find('.ui-slider-access:eq(0)').outerWidth(true);\n\t\t\t\t\t\t\tif (sliderAccessWidth) {\n\t\t\t\t\t\t\t\t$tp.find('table:visible').each(function () {\n\t\t\t\t\t\t\t\t\tvar $g = $(this),\n\t\t\t\t\t\t\t\t\t\toldWidth = $g.outerWidth(),\n\t\t\t\t\t\t\t\t\t\toldMarginLeft = $g.css(rtl ? 'marginRight' : 'marginLeft').toString().replace('%', ''),\n\t\t\t\t\t\t\t\t\t\tnewWidth = oldWidth - sliderAccessWidth,\n\t\t\t\t\t\t\t\t\t\tnewMarginLeft = ((oldMarginLeft * newWidth) / oldWidth) + '%',\n\t\t\t\t\t\t\t\t\t\tcss = { width: newWidth, marginRight: 0, marginLeft: 0 };\n\t\t\t\t\t\t\t\t\tcss[rtl ? 'marginRight' : 'marginLeft'] = newMarginLeft;\n\t\t\t\t\t\t\t\t\t$g.css(css);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 10);\n\t\t\t\t}\n\t\t\t\t// end slideAccess integration\n\n\t\t\t\ttp_inst._limitMinMaxDateTime(this.inst, true);\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* This function tries to limit the ability to go outside the\n\t\t* min/max date range\n\t\t*/\n\t\t_limitMinMaxDateTime: function (dp_inst, adjustSliders) {\n\t\t\tvar o = this._defaults,\n\t\t\t\tdp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\n\n\t\t\tif (!this._defaults.showTimepicker) {\n\t\t\t\treturn;\n\t\t\t} // No time so nothing to check here\n\n\t\t\tif ($.datepicker._get(dp_inst, 'minDateTime') !== null && $.datepicker._get(dp_inst, 'minDateTime') !== undefined && dp_date) {\n\t\t\t\tvar minDateTime = $.datepicker._get(dp_inst, 'minDateTime'),\n\t\t\t\t\tminDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\n\n\t\t\t\tif (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null || this.millisecMinOriginal === null || this.microsecMinOriginal === null) {\n\t\t\t\t\tthis.hourMinOriginal = o.hourMin;\n\t\t\t\t\tthis.minuteMinOriginal = o.minuteMin;\n\t\t\t\t\tthis.secondMinOriginal = o.secondMin;\n\t\t\t\t\tthis.millisecMinOriginal = o.millisecMin;\n\t\t\t\t\tthis.microsecMinOriginal = o.microsecMin;\n\t\t\t\t}\n\n\t\t\t\tif (dp_inst.settings.timeOnly || minDateTimeDate.getTime() === dp_date.getTime()) {\n\t\t\t\t\tthis._defaults.hourMin = minDateTime.getHours();\n\t\t\t\t\tif (this.hour <= this._defaults.hourMin) {\n\t\t\t\t\t\tthis.hour = this._defaults.hourMin;\n\t\t\t\t\t\tthis._defaults.minuteMin = minDateTime.getMinutes();\n\t\t\t\t\t\tif (this.minute <= this._defaults.minuteMin) {\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMin;\n\t\t\t\t\t\t\tthis._defaults.secondMin = minDateTime.getSeconds();\n\t\t\t\t\t\t\tif (this.second <= this._defaults.secondMin) {\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMin;\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = minDateTime.getMilliseconds();\n\t\t\t\t\t\t\t\tif (this.millisec <= this._defaults.millisecMin) {\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMin;\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = minDateTime.getMicroseconds();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (this.microsec < this._defaults.microsecMin) {\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMin;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\n\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\n\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\n\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\n\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._defaults.hourMin = this.hourMinOriginal;\n\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\n\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\n\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\n\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($.datepicker._get(dp_inst, 'maxDateTime') !== null && $.datepicker._get(dp_inst, 'maxDateTime') !== undefined && dp_date) {\n\t\t\t\tvar maxDateTime = $.datepicker._get(dp_inst, 'maxDateTime'),\n\t\t\t\t\tmaxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\n\n\t\t\t\tif (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null || this.millisecMaxOriginal === null) {\n\t\t\t\t\tthis.hourMaxOriginal = o.hourMax;\n\t\t\t\t\tthis.minuteMaxOriginal = o.minuteMax;\n\t\t\t\t\tthis.secondMaxOriginal = o.secondMax;\n\t\t\t\t\tthis.millisecMaxOriginal = o.millisecMax;\n\t\t\t\t\tthis.microsecMaxOriginal = o.microsecMax;\n\t\t\t\t}\n\n\t\t\t\tif (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() === dp_date.getTime()) {\n\t\t\t\t\tthis._defaults.hourMax = maxDateTime.getHours();\n\t\t\t\t\tif (this.hour >= this._defaults.hourMax) {\n\t\t\t\t\t\tthis.hour = this._defaults.hourMax;\n\t\t\t\t\t\tthis._defaults.minuteMax = maxDateTime.getMinutes();\n\t\t\t\t\t\tif (this.minute >= this._defaults.minuteMax) {\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMax;\n\t\t\t\t\t\t\tthis._defaults.secondMax = maxDateTime.getSeconds();\n\t\t\t\t\t\t\tif (this.second >= this._defaults.secondMax) {\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMax;\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = maxDateTime.getMilliseconds();\n\t\t\t\t\t\t\t\tif (this.millisec >= this._defaults.millisecMax) {\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMax;\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = maxDateTime.getMicroseconds();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (this.microsec > this._defaults.microsecMax) {\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMax;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\n\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\n\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\n\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\n\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._defaults.hourMax = this.hourMaxOriginal;\n\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\n\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\n\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\n\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dp_inst.settings.minTime!==null) {\n\t\t\t\tvar tempMinTime=new Date(\"01/01/1970 \" + dp_inst.settings.minTime);\n\t\t\t\tif (this.hour<tempMinTime.getHours()) {\n\t\t\t\t\tthis.hour=this._defaults.hourMin=tempMinTime.getHours();\n\t\t\t\t\tthis.minute=this._defaults.minuteMin=tempMinTime.getMinutes();\n\t\t\t\t} else if (this.hour===tempMinTime.getHours() && this.minute<tempMinTime.getMinutes()) {\n\t\t\t\t\tthis.minute=this._defaults.minuteMin=tempMinTime.getMinutes();\n\t\t\t\t} else {\n\t\t\t\t\tif (this._defaults.hourMin<tempMinTime.getHours()) {\n\t\t\t\t\t\tthis._defaults.hourMin=tempMinTime.getHours();\n\t\t\t\t\t\tthis._defaults.minuteMin=tempMinTime.getMinutes();\n\t\t\t\t\t} else if (this._defaults.hourMin===tempMinTime.getHours()===this.hour && this._defaults.minuteMin<tempMinTime.getMinutes()) {\n\t\t\t\t\t\tthis._defaults.minuteMin=tempMinTime.getMinutes();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._defaults.minuteMin=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dp_inst.settings.maxTime!==null) {\n\t\t\t\tvar tempMaxTime=new Date(\"01/01/1970 \" + dp_inst.settings.maxTime);\n\t\t\t\tif (this.hour>tempMaxTime.getHours()) {\n\t\t\t\t\tthis.hour=this._defaults.hourMax=tempMaxTime.getHours();\n\t\t\t\t\tthis.minute=this._defaults.minuteMax=tempMaxTime.getMinutes();\n\t\t\t\t} else if (this.hour===tempMaxTime.getHours() && this.minute>tempMaxTime.getMinutes()) {\n\t\t\t\t\tthis.minute=this._defaults.minuteMax=tempMaxTime.getMinutes();\n\t\t\t\t} else {\n\t\t\t\t\tif (this._defaults.hourMax>tempMaxTime.getHours()) {\n\t\t\t\t\t\tthis._defaults.hourMax=tempMaxTime.getHours();\n\t\t\t\t\t\tthis._defaults.minuteMax=tempMaxTime.getMinutes();\n\t\t\t\t\t} else if (this._defaults.hourMax===tempMaxTime.getHours()===this.hour && this._defaults.minuteMax>tempMaxTime.getMinutes()) {\n\t\t\t\t\t\tthis._defaults.minuteMax=tempMaxTime.getMinutes();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._defaults.minuteMax=59;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (adjustSliders !== undefined && adjustSliders === true) {\n\t\t\t\tvar hourMax = parseInt((this._defaults.hourMax - ((this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour)), 10),\n\t\t\t\t\tminMax = parseInt((this._defaults.minuteMax - ((this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute)), 10),\n\t\t\t\t\tsecMax = parseInt((this._defaults.secondMax - ((this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond)), 10),\n\t\t\t\t\tmillisecMax = parseInt((this._defaults.millisecMax - ((this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec)), 10),\n\t\t\t\t\tmicrosecMax = parseInt((this._defaults.microsecMax - ((this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec)), 10);\n\n\t\t\t\tif (this.hour_slider) {\n\t\t\t\t\tthis.control.options(this, this.hour_slider, 'hour', { min: this._defaults.hourMin, max: hourMax, step: this._defaults.stepHour });\n\t\t\t\t\tthis.control.value(this, this.hour_slider, 'hour', this.hour - (this.hour % this._defaults.stepHour));\n\t\t\t\t}\n\t\t\t\tif (this.minute_slider) {\n\t\t\t\t\tthis.control.options(this, this.minute_slider, 'minute', { min: this._defaults.minuteMin, max: minMax, step: this._defaults.stepMinute });\n\t\t\t\t\tthis.control.value(this, this.minute_slider, 'minute', this.minute - (this.minute % this._defaults.stepMinute));\n\t\t\t\t}\n\t\t\t\tif (this.second_slider) {\n\t\t\t\t\tthis.control.options(this, this.second_slider, 'second', { min: this._defaults.secondMin, max: secMax, step: this._defaults.stepSecond });\n\t\t\t\t\tthis.control.value(this, this.second_slider, 'second', this.second - (this.second % this._defaults.stepSecond));\n\t\t\t\t}\n\t\t\t\tif (this.millisec_slider) {\n\t\t\t\t\tthis.control.options(this, this.millisec_slider, 'millisec', { min: this._defaults.millisecMin, max: millisecMax, step: this._defaults.stepMillisec });\n\t\t\t\t\tthis.control.value(this, this.millisec_slider, 'millisec', this.millisec - (this.millisec % this._defaults.stepMillisec));\n\t\t\t\t}\n\t\t\t\tif (this.microsec_slider) {\n\t\t\t\t\tthis.control.options(this, this.microsec_slider, 'microsec', { min: this._defaults.microsecMin, max: microsecMax, step: this._defaults.stepMicrosec });\n\t\t\t\t\tthis.control.value(this, this.microsec_slider, 'microsec', this.microsec - (this.microsec % this._defaults.stepMicrosec));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t/*\n\t\t* when a slider moves, set the internal time...\n\t\t* on time change is also called when the time is updated in the text field\n\t\t*/\n\t\t_onTimeChange: function () {\n\t\t\tif (!this._defaults.showTimepicker) {\n                                return;\n\t\t\t}\n\t\t\tvar hour = (this.hour_slider) ? this.control.value(this, this.hour_slider, 'hour') : false,\n\t\t\t\tminute = (this.minute_slider) ? this.control.value(this, this.minute_slider, 'minute') : false,\n\t\t\t\tsecond = (this.second_slider) ? this.control.value(this, this.second_slider, 'second') : false,\n\t\t\t\tmillisec = (this.millisec_slider) ? this.control.value(this, this.millisec_slider, 'millisec') : false,\n\t\t\t\tmicrosec = (this.microsec_slider) ? this.control.value(this, this.microsec_slider, 'microsec') : false,\n\t\t\t\ttimezone = (this.timezone_select) ? this.timezone_select.val() : false,\n\t\t\t\to = this._defaults,\n\t\t\t\tpickerTimeFormat = o.pickerTimeFormat || o.timeFormat,\n\t\t\t\tpickerTimeSuffix = o.pickerTimeSuffix || o.timeSuffix;\n\n\t\t\tif (typeof(hour) === 'object') {\n\t\t\t\thour = false;\n\t\t\t}\n\t\t\tif (typeof(minute) === 'object') {\n\t\t\t\tminute = false;\n\t\t\t}\n\t\t\tif (typeof(second) === 'object') {\n\t\t\t\tsecond = false;\n\t\t\t}\n\t\t\tif (typeof(millisec) === 'object') {\n\t\t\t\tmillisec = false;\n\t\t\t}\n\t\t\tif (typeof(microsec) === 'object') {\n\t\t\t\tmicrosec = false;\n\t\t\t}\n\t\t\tif (typeof(timezone) === 'object') {\n\t\t\t\ttimezone = false;\n\t\t\t}\n\n\t\t\tif (hour !== false) {\n\t\t\t\thour = parseInt(hour, 10);\n\t\t\t}\n\t\t\tif (minute !== false) {\n\t\t\t\tminute = parseInt(minute, 10);\n\t\t\t}\n\t\t\tif (second !== false) {\n\t\t\t\tsecond = parseInt(second, 10);\n\t\t\t}\n\t\t\tif (millisec !== false) {\n\t\t\t\tmillisec = parseInt(millisec, 10);\n\t\t\t}\n\t\t\tif (microsec !== false) {\n\t\t\t\tmicrosec = parseInt(microsec, 10);\n\t\t\t}\n\t\t\tif (timezone !== false) {\n\t\t\t\ttimezone = timezone.toString();\n\t\t\t}\n\n\t\t\tvar ampm = o[hour < 12 ? 'amNames' : 'pmNames'][0];\n\n\t\t\t// If the update was done in the input field, the input field should not be updated.\n\t\t\t// If the update was done using the sliders, update the input field.\n\t\t\tvar hasChanged = (\n\t\t\t\t\t\thour !== parseInt(this.hour,10) || // sliders should all be numeric\n\t\t\t\t\t\tminute !== parseInt(this.minute,10) ||\n\t\t\t\t\t\tsecond !== parseInt(this.second,10) ||\n\t\t\t\t\t\tmillisec !== parseInt(this.millisec,10) ||\n\t\t\t\t\t\tmicrosec !== parseInt(this.microsec,10) ||\n\t\t\t\t\t\t(this.ampm.length > 0 && (hour < 12) !== ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) ||\n\t\t\t\t\t\t(this.timezone !== null && timezone !== this.timezone.toString()) // could be numeric or \"EST\" format, so use toString()\n\t\t\t\t\t);\n\n\t\t\tif (hasChanged) {\n\n\t\t\t\tif (hour !== false) {\n\t\t\t\t\tthis.hour = hour;\n\t\t\t\t}\n\t\t\t\tif (minute !== false) {\n\t\t\t\t\tthis.minute = minute;\n\t\t\t\t}\n\t\t\t\tif (second !== false) {\n\t\t\t\t\tthis.second = second;\n\t\t\t\t}\n\t\t\t\tif (millisec !== false) {\n\t\t\t\t\tthis.millisec = millisec;\n\t\t\t\t}\n\t\t\t\tif (microsec !== false) {\n\t\t\t\t\tthis.microsec = microsec;\n\t\t\t\t}\n\t\t\t\tif (timezone !== false) {\n\t\t\t\t\tthis.timezone = timezone;\n\t\t\t\t}\n\n\t\t\t\tif (!this.inst) {\n\t\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\n\t\t\t\t}\n\n\t\t\t\tthis._limitMinMaxDateTime(this.inst, true);\n\t\t\t}\n\t\t\tif (this.support.ampm) {\n\t\t\t\tthis.ampm = ampm;\n\t\t\t}\n\n\t\t\t// Updates the time within the timepicker\n\t\t\tthis.formattedTime = $.datepicker.formatTime(o.timeFormat, this, o);\n\t\t\tif (this.$timeObj) {\n\t\t\t\tif (pickerTimeFormat === o.timeFormat) {\n\t\t\t\t\tthis.$timeObj.val(this.formattedTime + pickerTimeSuffix);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.$timeObj.val($.datepicker.formatTime(pickerTimeFormat, this, o) + pickerTimeSuffix);\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t// Input loses focus when typing with picker open\n\t\t\t\t// https://github.com/trentrichardson/jQuery-Timepicker-Addon/issues/848\n\t\t\t\tif (this.$timeObj[0].setSelectionRange) {\n\t\t\t\t\tvar sPos = this.$timeObj[0].selectionStart;\n\t\t\t\t\tvar ePos = this.$timeObj[0].selectionEnd;\n\t\t\t\t\tthis.$timeObj[0].setSelectionRange(sPos, ePos);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\n\t\t\tthis.timeDefined = true;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis._updateDateTime();\n\t\t\t\t//this.$input.focus(); // may automatically open the picker on setDate\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* call custom onSelect.\n\t\t* bind to sliders slidestop, and grid click.\n\t\t*/\n\t\t_onSelectHandler: function () {\n\t\t\tvar onSelect = this._defaults.onSelect || this.inst.settings.onSelect;\n\t\t\tvar inputEl = this.$input ? this.$input[0] : null;\n\t\t\tif (onSelect && inputEl) {\n\t\t\t\tonSelect.apply(inputEl, [this.formattedDateTime, this]);\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* update our input with the new date time..\n\t\t*/\n\t\t_updateDateTime: function (dp_inst) {\n\t\t\tdp_inst = this.inst || dp_inst;\n\t\t\tvar dtTmp = (dp_inst.currentYear > 0?\n\t\t\t\t\t\t\tnew Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay) :\n\t\t\t\t\t\t\tnew Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\n\t\t\t\tdt = $.datepicker._daylightSavingAdjust(dtTmp),\n\t\t\t\t//dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\n\t\t\t\t//dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay)),\n\t\t\t\tdateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\n\t\t\t\tformatCfg = $.datepicker._getFormatConfig(dp_inst),\n\t\t\t\ttimeAvailable = dt !== null && this.timeDefined;\n\t\t\tthis.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\n\t\t\tvar formattedDateTime = this.formattedDate;\n\n\t\t\t// if a slider was changed but datepicker doesn't have a value yet, set it\n\t\t\tif (dp_inst.lastVal === \"\") {\n                dp_inst.currentYear = dp_inst.selectedYear;\n                dp_inst.currentMonth = dp_inst.selectedMonth;\n                dp_inst.currentDay = dp_inst.selectedDay;\n            }\n\n\t\t\t/*\n\t\t\t* remove following lines to force every changes in date picker to change the input value\n\t\t\t* Bug descriptions: when an input field has a default value, and click on the field to pop up the date picker.\n\t\t\t* If the user manually empty the value in the input field, the date picker will never change selected value.\n\t\t\t*/\n\t\t\t//if (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0)) {\n\t\t\t//\treturn;\n\t\t\t//}\n\n\t\t\tif (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === false) {\n\t\t\t\tformattedDateTime = this.formattedTime;\n\t\t\t} else if ((this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) || (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === true)) {\n\t\t\t\tformattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix;\n\t\t\t}\n\n\t\t\tthis.formattedDateTime = formattedDateTime;\n\n\t\t\tif (!this._defaults.showTimepicker) {\n\t\t\t\tthis.$input.val(this.formattedDate);\n\t\t\t} else if (this.$altInput && this._defaults.timeOnly === false && this._defaults.altFieldTimeOnly === true) {\n\t\t\t\tthis.$altInput.val(this.formattedTime);\n\t\t\t\tthis.$input.val(this.formattedDate);\n\t\t\t} else if (this.$altInput) {\n\t\t\t\tthis.$input.val(formattedDateTime);\n\t\t\t\tvar altFormattedDateTime = '',\n\t\t\t\t\taltSeparator = this._defaults.altSeparator !== null ? this._defaults.altSeparator : this._defaults.separator,\n\t\t\t\t\taltTimeSuffix = this._defaults.altTimeSuffix !== null ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;\n\n\t\t\t\tif (!this._defaults.timeOnly) {\n\t\t\t\t\tif (this._defaults.altFormat) {\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(this._defaults.altFormat, (dt === null ? new Date() : dt), formatCfg);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\taltFormattedDateTime = this.formattedDate;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (altFormattedDateTime) {\n\t\t\t\t\t\taltFormattedDateTime += altSeparator;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._defaults.altTimeFormat !== null) {\n\t\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + altTimeSuffix;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\taltFormattedDateTime += this.formattedTime + altTimeSuffix;\n\t\t\t\t}\n\t\t\t\tthis.$altInput.val(altFormattedDateTime);\n\t\t\t} else {\n\t\t\t\tthis.$input.val(formattedDateTime);\n\t\t\t}\n\n\t\t\tthis.$input.trigger(\"change\");\n\t\t},\n\n\t\t_onFocus: function () {\n\t\t\tif (!this.$input.val() && this._defaults.defaultValue) {\n\t\t\t\tthis.$input.val(this._defaults.defaultValue);\n\t\t\t\tvar inst = $.datepicker._getInst(this.$input.get(0)),\n\t\t\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\n\t\t\t\tif (tp_inst) {\n\t\t\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t$.datepicker._updateDatepicker(inst);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t$.timepicker.log(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/*\n\t\t* Small abstraction to control types\n\t\t* We can add more, just be sure to follow the pattern: create, options, value\n\t\t*/\n\t\t_controls: {\n\t\t\t// slider methods\n\t\t\tslider: {\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\n\t\t\t\t\tvar rtl = tp_inst._defaults.isRTL; // if rtl go -60->0 instead of 0->60\n\t\t\t\t\treturn obj.prop('slide', null).slider({\n\t\t\t\t\t\torientation: \"horizontal\",\n\t\t\t\t\t\tvalue: rtl ? val * -1 : val,\n\t\t\t\t\t\tmin: rtl ? max * -1 : min,\n\t\t\t\t\t\tmax: rtl ? min * -1 : max,\n\t\t\t\t\t\tstep: step,\n\t\t\t\t\t\tslide: function (event, ui) {\n\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, $(this), unit, rtl ? ui.value * -1 : ui.value);\n\t\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstop: function (event, ui) {\n\t\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\n\t\t\t\t\t\tif (typeof(opts) === 'string') {\n\t\t\t\t\t\t\tif (opts === 'min' || opts === 'max') {\n\t\t\t\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\t\t\t\treturn obj.slider(opts, val * -1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn Math.abs(obj.slider(opts));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn obj.slider(opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar min = opts.min,\n\t\t\t\t\t\t\tmax = opts.max;\n\t\t\t\t\t\topts.min = opts.max = null;\n\t\t\t\t\t\tif (min !== undefined) {\n\t\t\t\t\t\t\topts.max = min * -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (max !== undefined) {\n\t\t\t\t\t\t\topts.min = max * -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn obj.slider(opts);\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof(opts) === 'string' && val !== undefined) {\n\t\t\t\t\t\treturn obj.slider(opts, val);\n\t\t\t\t\t}\n\t\t\t\t\treturn obj.slider(opts);\n\t\t\t\t},\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\n\t\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\t\treturn obj.slider('value', val * -1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Math.abs(obj.slider('value'));\n\t\t\t\t\t}\n\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\treturn obj.slider('value', val);\n\t\t\t\t\t}\n\t\t\t\t\treturn obj.slider('value');\n\t\t\t\t}\n\t\t\t},\n\t\t\t// select methods\n\t\t\tselect: {\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\n\t\t\t\t\tvar sel = '<select class=\"ui-timepicker-select ui-state-default ui-corner-all\" data-unit=\"' + unit + '\" data-min=\"' + min + '\" data-max=\"' + max + '\" data-step=\"' + step + '\">',\n\t\t\t\t\t\tformat = tp_inst._defaults.pickerTimeFormat || tp_inst._defaults.timeFormat;\n\n\t\t\t\t\tfor (var i = min; i <= max; i += step) {\n\t\t\t\t\t\tsel += '<option value=\"' + i + '\"' + (i === val ? ' selected' : '') + '>';\n\t\t\t\t\t\tif (unit === 'hour') {\n\t\t\t\t\t\t\tsel += $.datepicker.formatTime($.trim(format.replace(/[^ht ]/ig, '')), {hour: i}, tp_inst._defaults);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (unit === 'millisec' || unit === 'microsec' || i >= 10) { sel += i; }\n\t\t\t\t\t\telse {sel += '0' + i.toString(); }\n\t\t\t\t\t\tsel += '</option>';\n\t\t\t\t\t}\n\t\t\t\t\tsel += '</select>';\n\n\t\t\t\t\tobj.children('select').remove();\n\n\t\t\t\t\t$(sel).appendTo(obj).change(function (e) {\n\t\t\t\t\t\ttp_inst._onTimeChange();\n\t\t\t\t\t\ttp_inst._onSelectHandler();\n\t\t\t\t\t\ttp_inst._afterInject();\n\t\t\t\t\t});\n\n\t\t\t\t\treturn obj;\n\t\t\t\t},\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\n\t\t\t\t\tvar o = {},\n\t\t\t\t\t\t$t = obj.children('select');\n\t\t\t\t\tif (typeof(opts) === 'string') {\n\t\t\t\t\t\tif (val === undefined) {\n\t\t\t\t\t\t\treturn $t.data(opts);\n\t\t\t\t\t\t}\n\t\t\t\t\t\to[opts] = val;\n\t\t\t\t\t}\n\t\t\t\t\telse { o = opts; }\n\t\t\t\t\treturn tp_inst.control.create(tp_inst, obj, $t.data('unit'), $t.val(), o.min>=0 ? o.min : $t.data('min'), o.max || $t.data('max'), o.step || $t.data('step'));\n\t\t\t\t},\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\n\t\t\t\t\tvar $t = obj.children('select');\n\t\t\t\t\tif (val !== undefined) {\n\t\t\t\t\t\treturn $t.val(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn $t.val();\n\t\t\t\t}\n\t\t\t}\n\t\t} // end _controls\n\n\t});\n\n\t$.fn.extend({\n\t\t/*\n\t\t* shorthand just to use timepicker.\n\t\t*/\n\t\ttimepicker: function (o) {\n\t\t\to = o || {};\n\t\t\tvar tmp_args = Array.prototype.slice.call(arguments);\n\n\t\t\tif (typeof o === 'object') {\n\t\t\t\ttmp_args[0] = $.extend(o, {\n\t\t\t\t\ttimeOnly: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn $(this).each(function () {\n\t\t\t\t$.fn.datetimepicker.apply($(this), tmp_args);\n\t\t\t});\n\t\t},\n\n\t\t/*\n\t\t* extend timepicker to datepicker\n\t\t*/\n\t\tdatetimepicker: function (o) {\n\t\t\to = o || {};\n\t\t\tvar tmp_args = arguments;\n\n\t\t\tif (typeof(o) === 'string') {\n\t\t\t\tif (o === 'getDate'  || (o === 'option' && tmp_args.length === 2 && typeof (tmp_args[1]) === 'string')) {\n\t\t\t\t\treturn $.fn.datepicker.apply($(this[0]), tmp_args);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.each(function () {\n\t\t\t\t\t\tvar $t = $(this);\n\t\t\t\t\t\t$t.datepicker.apply($t, tmp_args);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.each(function () {\n\t\t\t\t\tvar $t = $(this);\n\t\t\t\t\t$t.datepicker($.timepicker._newInst($t, o)._defaults);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t/*\n\t* Public Utility to parse date and time\n\t*/\n\t$.datepicker.parseDateTime = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\n\t\tvar parseRes = parseDateTimeInternal(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings);\n\t\tif (parseRes.timeObj) {\n\t\t\tvar t = parseRes.timeObj;\n\t\t\tparseRes.date.setHours(t.hour, t.minute, t.second, t.millisec);\n\t\t\tparseRes.date.setMicroseconds(t.microsec);\n\t\t}\n\n\t\treturn parseRes.date;\n\t};\n\n\t/*\n\t* Public utility to parse time\n\t*/\n\t$.datepicker.parseTime = function (timeFormat, timeString, options) {\n\t\tvar o = extendRemove(extendRemove({}, $.timepicker._defaults), options || {}),\n\t\t\tiso8601 = (timeFormat.replace(/\\'.*?\\'/g, '').indexOf('Z') !== -1);\n\n\t\t// Strict parse requires the timeString to match the timeFormat exactly\n\t\tvar strictParse = function (f, s, o) {\n\n\t\t\t// pattern for standard and localized AM/PM markers\n\t\t\tvar getPatternAmpm = function (amNames, pmNames) {\n\t\t\t\tvar markers = [];\n\t\t\t\tif (amNames) {\n\t\t\t\t\t$.merge(markers, amNames);\n\t\t\t\t}\n\t\t\t\tif (pmNames) {\n\t\t\t\t\t$.merge(markers, pmNames);\n\t\t\t\t}\n\t\t\t\tmarkers = $.map(markers, function (val) {\n\t\t\t\t\treturn val.replace(/[.*+?|()\\[\\]{}\\\\]/g, '\\\\$&');\n\t\t\t\t});\n\t\t\t\treturn '(' + markers.join('|') + ')?';\n\t\t\t};\n\n\t\t\t// figure out position of time elements.. cause js cant do named captures\n\t\t\tvar getFormatPositions = function (timeFormat) {\n\t\t\t\tvar finds = timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),\n\t\t\t\t\torders = {\n\t\t\t\t\t\th: -1,\n\t\t\t\t\t\tm: -1,\n\t\t\t\t\t\ts: -1,\n\t\t\t\t\t\tl: -1,\n\t\t\t\t\t\tc: -1,\n\t\t\t\t\t\tt: -1,\n\t\t\t\t\t\tz: -1\n\t\t\t\t\t};\n\n\t\t\t\tif (finds) {\n\t\t\t\t\tfor (var i = 0; i < finds.length; i++) {\n\t\t\t\t\t\tif (orders[finds[i].toString().charAt(0)] === -1) {\n\t\t\t\t\t\t\torders[finds[i].toString().charAt(0)] = i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn orders;\n\t\t\t};\n\n\t\t\tvar regstr = '^' + f.toString()\n\t\t\t\t\t.replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\n\t\t\t\t\t\t\tvar ml = match.length;\n\t\t\t\t\t\t\tswitch (match.charAt(0).toLowerCase()) {\n\t\t\t\t\t\t\tcase 'h':\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n\t\t\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n\t\t\t\t\t\t\tcase 's':\n\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\n\t\t\t\t\t\t\tcase 'z':\n\t\t\t\t\t\t\t\treturn '(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?';\n\t\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\t\treturn getPatternAmpm(o.amNames, o.pmNames);\n\t\t\t\t\t\t\tdefault:    // literal escaped in quotes\n\t\t\t\t\t\t\t\treturn '(' + match.replace(/\\'/g, \"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g, function (m) { return \"\\\\\" + m; }) + ')?';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t.replace(/\\s/g, '\\\\s?') +\n\t\t\t\t\to.timeSuffix + '$',\n\t\t\t\torder = getFormatPositions(f),\n\t\t\t\tampm = '',\n\t\t\t\ttreg;\n\n\t\t\ttreg = s.match(new RegExp(regstr, 'i'));\n\n\t\t\tvar resTime = {\n\t\t\t\thour: 0,\n\t\t\t\tminute: 0,\n\t\t\t\tsecond: 0,\n\t\t\t\tmillisec: 0,\n\t\t\t\tmicrosec: 0\n\t\t\t};\n\n\t\t\tif (treg) {\n\t\t\t\tif (order.t !== -1) {\n\t\t\t\t\tif (treg[order.t] === undefined || treg[order.t].length === 0) {\n\t\t\t\t\t\tampm = '';\n\t\t\t\t\t\tresTime.ampm = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tampm = $.inArray(treg[order.t].toUpperCase(), $.map(o.amNames, function (x,i) { return x.toUpperCase(); })) !== -1 ? 'AM' : 'PM';\n\t\t\t\t\t\tresTime.ampm = o[ampm === 'AM' ? 'amNames' : 'pmNames'][0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (order.h !== -1) {\n\t\t\t\t\tif (ampm === 'AM' && treg[order.h] === '12') {\n\t\t\t\t\t\tresTime.hour = 0; // 12am = 0 hour\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (ampm === 'PM' && treg[order.h] !== '12') {\n\t\t\t\t\t\t\tresTime.hour = parseInt(treg[order.h], 10) + 12; // 12pm = 12 hour, any other pm = hour + 12\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresTime.hour = Number(treg[order.h]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (order.m !== -1) {\n\t\t\t\t\tresTime.minute = Number(treg[order.m]);\n\t\t\t\t}\n\t\t\t\tif (order.s !== -1) {\n\t\t\t\t\tresTime.second = Number(treg[order.s]);\n\t\t\t\t}\n\t\t\t\tif (order.l !== -1) {\n\t\t\t\t\tresTime.millisec = Number(treg[order.l]);\n\t\t\t\t}\n\t\t\t\tif (order.c !== -1) {\n\t\t\t\t\tresTime.microsec = Number(treg[order.c]);\n\t\t\t\t}\n\t\t\t\tif (order.z !== -1 && treg[order.z] !== undefined) {\n\t\t\t\t\tresTime.timezone = $.timepicker.timezoneOffsetNumber(treg[order.z]);\n\t\t\t\t}\n\n\n\t\t\t\treturn resTime;\n\t\t\t}\n\t\t\treturn false;\n\t\t};// end strictParse\n\n\t\t// First try JS Date, if that fails, use strictParse\n\t\tvar looseParse = function (f, s, o) {\n\t\t\ttry {\n\t\t\t\tvar d = new Date('2012-01-01 ' + s);\n\t\t\t\tif (isNaN(d.getTime())) {\n\t\t\t\t\td = new Date('2012-01-01T' + s);\n\t\t\t\t\tif (isNaN(d.getTime())) {\n\t\t\t\t\t\td = new Date('01/01/2012 ' + s);\n\t\t\t\t\t\tif (isNaN(d.getTime())) {\n\t\t\t\t\t\t\tthrow \"Unable to parse time with native Date: \" + s;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\thour: d.getHours(),\n\t\t\t\t\tminute: d.getMinutes(),\n\t\t\t\t\tsecond: d.getSeconds(),\n\t\t\t\t\tmillisec: d.getMilliseconds(),\n\t\t\t\t\tmicrosec: d.getMicroseconds(),\n\t\t\t\t\ttimezone: d.getTimezoneOffset() * -1\n\t\t\t\t};\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\ttry {\n\t\t\t\t\treturn strictParse(f, s, o);\n\t\t\t\t}\n\t\t\t\tcatch (err2) {\n\t\t\t\t\t$.timepicker.log(\"Unable to parse \\ntimeString: \" + s + \"\\ntimeFormat: \" + f);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}; // end looseParse\n\n\t\tif (typeof o.parse === \"function\") {\n\t\t\treturn o.parse(timeFormat, timeString, o);\n\t\t}\n\t\tif (o.parse === 'loose') {\n\t\t\treturn looseParse(timeFormat, timeString, o);\n\t\t}\n\t\treturn strictParse(timeFormat, timeString, o);\n\t};\n\n\t/**\n\t * Public utility to format the time\n\t * @param {string} format format of the time\n\t * @param {Object} time Object not a Date for timezones\n\t * @param {Object} [options] essentially the regional[].. amNames, pmNames, ampm\n\t * @returns {string} the formatted time\n\t */\n\t$.datepicker.formatTime = function (format, time, options) {\n\t\toptions = options || {};\n\t\toptions = $.extend({}, $.timepicker._defaults, options);\n\t\ttime = $.extend({\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tmillisec: 0,\n\t\t\tmicrosec: 0,\n\t\t\ttimezone: null\n\t\t}, time);\n\n\t\tvar tmptime = format,\n\t\t\tampmName = options.amNames[0],\n\t\t\thour = parseInt(time.hour, 10);\n\n\t\tif (hour > 11) {\n\t\t\tampmName = options.pmNames[0];\n\t\t}\n\n\t\ttmptime = tmptime.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g, function (match) {\n\t\t\tswitch (match) {\n\t\t\tcase 'HH':\n\t\t\t\treturn ('0' + hour).slice(-2);\n\t\t\tcase 'H':\n\t\t\t\treturn hour;\n\t\t\tcase 'hh':\n\t\t\t\treturn ('0' + convert24to12(hour)).slice(-2);\n\t\t\tcase 'h':\n\t\t\t\treturn convert24to12(hour);\n\t\t\tcase 'mm':\n\t\t\t\treturn ('0' + time.minute).slice(-2);\n\t\t\tcase 'm':\n\t\t\t\treturn time.minute;\n\t\t\tcase 'ss':\n\t\t\t\treturn ('0' + time.second).slice(-2);\n\t\t\tcase 's':\n\t\t\t\treturn time.second;\n\t\t\tcase 'l':\n\t\t\t\treturn ('00' + time.millisec).slice(-3);\n\t\t\tcase 'c':\n\t\t\t\treturn ('00' + time.microsec).slice(-3);\n\t\t\tcase 'z':\n\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, false);\n\t\t\tcase 'Z':\n\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, true);\n\t\t\tcase 'T':\n\t\t\t\treturn ampmName.charAt(0).toUpperCase();\n\t\t\tcase 'TT':\n\t\t\t\treturn ampmName.toUpperCase();\n\t\t\tcase 't':\n\t\t\t\treturn ampmName.charAt(0).toLowerCase();\n\t\t\tcase 'tt':\n\t\t\t\treturn ampmName.toLowerCase();\n\t\t\tdefault:\n\t\t\t\treturn match.replace(/'/g, \"\");\n\t\t\t}\n\t\t});\n\n\t\treturn tmptime;\n\t};\n\n\t/*\n\t* the bad hack :/ override datepicker so it doesn't close on select\n\t// inspired: http://stackoverflow.com/questions/1252512/jquery-datepicker-prevent-closing-picker-when-clicking-a-date/1762378#1762378\n\t*/\n\t$.datepicker._base_selectDate = $.datepicker._selectDate;\n\t$.datepicker._selectDate = function (id, dateStr) {\n\t\tvar inst = this._getInst($(id)[0]),\n\t\t\ttp_inst = this._get(inst, 'timepicker'),\n\t\t\twas_inline;\n\n\t\tif (tp_inst && inst.settings.showTimepicker) {\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\n\t\t\twas_inline = inst.inline;\n\t\t\tinst.inline = inst.stay_open = true;\n\t\t\t//This way the onSelect handler called from calendarpicker get the full dateTime\n\t\t\tthis._base_selectDate(id, dateStr);\n\t\t\tinst.inline = was_inline;\n\t\t\tinst.stay_open = false;\n\t\t\tthis._notifyChange(inst);\n\t\t\tthis._updateDatepicker(inst);\n\t\t} else {\n\t\t\tthis._base_selectDate(id, dateStr);\n\t\t}\n\t};\n\n\t/*\n\t* second bad hack :/ override datepicker so it triggers an event when changing the input field\n\t* and does not redraw the datepicker on every selectDate event\n\t*/\n\t$.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;\n\t$.datepicker._updateDatepicker = function (inst) {\n\n\t\t// don't popup the datepicker if there is another instance already opened\n\t\tvar input = inst.input[0];\n\t\tif ($.datepicker._curInst && $.datepicker._curInst !== inst && $.datepicker._datepickerShowing && $.datepicker._lastInput !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof(inst.stay_open) !== 'boolean' || inst.stay_open === false) {\n\n\t\t\tthis._base_updateDatepicker(inst);\n\n\t\t\t// Reload the time control when changing something in the input text field.\n\t\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\t\tif (tp_inst) {\n\t\t\t\ttp_inst._addTimePicker(inst);\n\t\t\t}\n\t\t}\n\t};\n\n\t/*\n\t* third bad hack :/ override datepicker so it allows spaces and colon in the input field\n\t*/\n\t$.datepicker._base_doKeyPress = $.datepicker._doKeyPress;\n\t$.datepicker._doKeyPress = function (event) {\n\t\tvar inst = $.datepicker._getInst(event.target),\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\n\n\t\tif (tp_inst) {\n\t\t\tif ($.datepicker._get(inst, 'constrainInput')) {\n\t\t\t\tvar ampm = tp_inst.support.ampm,\n\t\t\t\t\ttz = tp_inst._defaults.showTimezone !== null ? tp_inst._defaults.showTimezone : tp_inst.support.timezone,\n\t\t\t\t\tdateChars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat')),\n\t\t\t\t\tdatetimeChars = tp_inst._defaults.timeFormat.toString()\n\t\t\t\t\t\t\t\t\t\t\t.replace(/[hms]/g, '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/TT/g, ampm ? 'APM' : '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/Tt/g, ampm ? 'AaPpMm' : '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/tT/g, ampm ? 'AaPpMm' : '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/T/g, ampm ? 'AP' : '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/tt/g, ampm ? 'apm' : '')\n\t\t\t\t\t\t\t\t\t\t\t.replace(/t/g, ampm ? 'ap' : '') +\n\t\t\t\t\t\t\t\t\t\t\t\" \" + tp_inst._defaults.separator +\n\t\t\t\t\t\t\t\t\t\t\ttp_inst._defaults.timeSuffix +\n\t\t\t\t\t\t\t\t\t\t\t(tz ? tp_inst._defaults.timezoneList.join('') : '') +\n\t\t\t\t\t\t\t\t\t\t\t(tp_inst._defaults.amNames.join('')) + (tp_inst._defaults.pmNames.join('')) +\n\t\t\t\t\t\t\t\t\t\t\tdateChars,\n\t\t\t\t\tchr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);\n\t\t\t\treturn event.ctrlKey || (chr < ' ' || !dateChars || datetimeChars.indexOf(chr) > -1);\n\t\t\t}\n\t\t}\n\n\t\treturn $.datepicker._base_doKeyPress(event);\n\t};\n\n\t/*\n\t* Fourth bad hack :/ override _updateAlternate function used in inline mode to init altField\n\t* Update any alternate field to synchronise with the main field.\n\t*/\n\t$.datepicker._base_updateAlternate = $.datepicker._updateAlternate;\n\t$.datepicker._updateAlternate = function (inst) {\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif (tp_inst) {\n\t\t\tvar altField = tp_inst._defaults.altField;\n\t\t\tif (altField) { // update alternate field too\n\t\t\t\tvar altFormat = tp_inst._defaults.altFormat || tp_inst._defaults.dateFormat,\n\t\t\t\t\tdate = this._getDate(inst),\n\t\t\t\t\tformatCfg = $.datepicker._getFormatConfig(inst),\n\t\t\t\t\taltFormattedDateTime = '',\n\t\t\t\t\taltSeparator = tp_inst._defaults.altSeparator ? tp_inst._defaults.altSeparator : tp_inst._defaults.separator,\n\t\t\t\t\taltTimeSuffix = tp_inst._defaults.altTimeSuffix ? tp_inst._defaults.altTimeSuffix : tp_inst._defaults.timeSuffix,\n\t\t\t\t\taltTimeFormat = tp_inst._defaults.altTimeFormat !== null ? tp_inst._defaults.altTimeFormat : tp_inst._defaults.timeFormat;\n\n\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(altTimeFormat, tp_inst, tp_inst._defaults) + altTimeSuffix;\n\t\t\t\tif (!tp_inst._defaults.timeOnly && !tp_inst._defaults.altFieldTimeOnly && date !== null) {\n\t\t\t\t\tif (tp_inst._defaults.altFormat) {\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(tp_inst._defaults.altFormat, date, formatCfg) + altSeparator + altFormattedDateTime;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\taltFormattedDateTime = tp_inst.formattedDate + altSeparator + altFormattedDateTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$(altField).val( inst.input.val() ? altFormattedDateTime : \"\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t$.datepicker._base_updateAlternate(inst);\n\t\t}\n\t};\n\n\t/*\n\t* Override key up event to sync manual input changes.\n\t*/\n\t$.datepicker._base_doKeyUp = $.datepicker._doKeyUp;\n\t$.datepicker._doKeyUp = function (event) {\n\t\tvar inst = $.datepicker._getInst(event.target),\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\n\n\t\tif (tp_inst) {\n\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\n\t\t\t\ttry {\n\t\t\t\t\t$.datepicker._updateDatepicker(inst);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t$.timepicker.log(err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $.datepicker._base_doKeyUp(event);\n\t};\n\n\t/*\n\t* override \"Today\" button to also grab the time and set it to input field.\n\t*/\n\t$.datepicker._base_gotoToday = $.datepicker._gotoToday;\n\t$.datepicker._gotoToday = function (id) {\n\t\tvar inst = this._getInst($(id)[0]);\n\t\tthis._base_gotoToday(id);\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif (!tp_inst) {\n\t\t  return;\n\t\t}\n\n\t\tvar tzoffset = $.timepicker.timezoneOffsetNumber(tp_inst.timezone);\n\t\tvar now = new Date();\n\t\tnow.setMinutes(now.getMinutes() + now.getTimezoneOffset() + parseInt(tzoffset, 10));\n\t\tthis._setTime(inst, now);\n\t\tthis._setDate(inst, now);\n\t\ttp_inst._onSelectHandler();\n\t};\n\n\t/*\n\t* Disable & enable the Time in the datetimepicker\n\t*/\n\t$.datepicker._disableTimepickerDatepicker = function (target) {\n\t\tvar inst = this._getInst(target);\n\t\tif (!inst) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n\t\tif (tp_inst) {\n\t\t\tinst.settings.showTimepicker = false;\n\t\t\ttp_inst._defaults.showTimepicker = false;\n\t\t\ttp_inst._updateDateTime(inst);\n\t\t}\n\t};\n\n\t$.datepicker._enableTimepickerDatepicker = function (target) {\n\t\tvar inst = this._getInst(target);\n\t\tif (!inst) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\t$(target).datepicker('getDate'); // Init selected[Year|Month|Day]\n\t\tif (tp_inst) {\n\t\t\tinst.settings.showTimepicker = true;\n\t\t\ttp_inst._defaults.showTimepicker = true;\n\t\t\ttp_inst._addTimePicker(inst); // Could be disabled on page load\n\t\t\ttp_inst._updateDateTime(inst);\n\t\t}\n\t};\n\n\t/*\n\t* Create our own set time function\n\t*/\n\t$.datepicker._setTime = function (inst, date) {\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif (tp_inst) {\n\t\t\tvar defaults = tp_inst._defaults;\n\n\t\t\t// calling _setTime with no date sets time to defaults\n\t\t\ttp_inst.hour = date ? date.getHours() : defaults.hour;\n\t\t\ttp_inst.minute = date ? date.getMinutes() : defaults.minute;\n\t\t\ttp_inst.second = date ? date.getSeconds() : defaults.second;\n\t\t\ttp_inst.millisec = date ? date.getMilliseconds() : defaults.millisec;\n\t\t\ttp_inst.microsec = date ? date.getMicroseconds() : defaults.microsec;\n\n\t\t\t//check if within min/max times..\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\n\n\t\t\ttp_inst._onTimeChange();\n\t\t\ttp_inst._updateDateTime(inst);\n\t\t}\n\t};\n\n\t/*\n\t* Create new public method to set only time, callable as $().datepicker('setTime', date)\n\t*/\n\t$.datepicker._setTimeDatepicker = function (target, date, withDate) {\n\t\tvar inst = this._getInst(target);\n\t\tif (!inst) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\n\t\tif (tp_inst) {\n\t\t\tthis._setDateFromField(inst);\n\t\t\tvar tp_date;\n\t\t\tif (date) {\n\t\t\t\tif (typeof date === \"string\") {\n\t\t\t\t\ttp_inst._parseTime(date, withDate);\n\t\t\t\t\ttp_date = new Date();\n\t\t\t\t\ttp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\n\t\t\t\t\ttp_date.setMicroseconds(tp_inst.microsec);\n\t\t\t\t} else {\n\t\t\t\t\ttp_date = new Date(date.getTime());\n\t\t\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\n\t\t\t\t}\n\t\t\t\tif (tp_date.toString() === 'Invalid Date') {\n\t\t\t\t\ttp_date = undefined;\n\t\t\t\t}\n\t\t\t\tthis._setTime(inst, tp_date);\n\t\t\t}\n\t\t}\n\n\t};\n\n\t/*\n\t* override setDate() to allow setting time too within Date object\n\t*/\n\t$.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;\n\t$.datepicker._setDateDatepicker = function (target, _date) {\n\t\tvar inst = this._getInst(target);\n\t\tvar date = _date;\n\t\tif (!inst) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof(_date) === 'string') {\n\t\t\tdate = new Date(_date);\n\t\t\tif (!date.getTime()) {\n\t\t\t\tthis._base_setDateDatepicker.apply(this, arguments);\n\t\t\t\tdate = $(target).datepicker('getDate');\n\t\t\t}\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tvar tp_date;\n\t\tif (date instanceof Date) {\n\t\t\ttp_date = new Date(date.getTime());\n\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\n\t\t} else {\n\t\t\ttp_date = date;\n\t\t}\n\n\t\t// This is important if you are using the timezone option, javascript's Date\n\t\t// object will only return the timezone offset for the current locale, so we\n\t\t// adjust it accordingly.  If not using timezone option this won't matter..\n\t\t// If a timezone is different in tp, keep the timezone as is\n\t\tif (tp_inst && tp_date) {\n\t\t\t// look out for DST if tz wasn't specified\n\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\n\t\t\t\ttp_inst.timezone = tp_date.getTimezoneOffset() * -1;\n\t\t\t}\n\t\t\tdate = $.timepicker.timezoneAdjust(date, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()), tp_inst.timezone);\n\t\t\ttp_date = $.timepicker.timezoneAdjust(tp_date, $.timepicker.timezoneOffsetString(-tp_date.getTimezoneOffset()), tp_inst.timezone);\n\t\t}\n\n\t\tthis._updateDatepicker(inst);\n\t\tthis._base_setDateDatepicker.apply(this, arguments);\n\t\tthis._setTimeDatepicker(target, tp_date, true);\n\t};\n\n\t/*\n\t* override getDate() to allow getting time too within Date object\n\t*/\n\t$.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;\n\t$.datepicker._getDateDatepicker = function (target, noDefault) {\n\t\tvar inst = this._getInst(target);\n\t\tif (!inst) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\n\t\tif (tp_inst) {\n\t\t\t// if it hasn't yet been defined, grab from field\n\t\t\tif (inst.lastVal === undefined) {\n\t\t\t\tthis._setDateFromField(inst, noDefault);\n\t\t\t}\n\n\t\t\tvar date = this._getDate(inst);\n\n\t\t\tvar currDT = null;\n\n\t\t\tif (tp_inst.$altInput && tp_inst._defaults.altFieldTimeOnly) {\n\t\t\t\tcurrDT = tp_inst.$input.val() + ' ' + tp_inst.$altInput.val();\n\t\t\t}\n\t\t\telse if (tp_inst.$input.get(0).tagName !== 'INPUT' && tp_inst.$altInput) {\n\t\t\t\t/**\n\t\t\t\t * in case the datetimepicker has been applied to a non-input tag for inline UI,\n\t\t\t\t * and the user has not configured the plugin to display only time in altInput,\n\t\t\t\t * pick current date time from the altInput (and hope for the best, for now, until \"ER1\" is applied)\n\t\t\t\t *\n\t\t\t\t * @todo ER1. Since altInput can have a totally difference format, convert it to standard format by reading input format from \"altFormat\" and \"altTimeFormat\" option values\n\t\t\t\t */\n\t\t\t\tcurrDT = tp_inst.$altInput.val();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrDT = tp_inst.$input.val();\n\t\t\t}\n\n\t\t\tif (date && tp_inst._parseTime(currDT, !inst.settings.timeOnly)) {\n\t\t\t\tdate.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\n\t\t\t\tdate.setMicroseconds(tp_inst.microsec);\n\n\t\t\t\t// This is important if you are using the timezone option, javascript's Date\n\t\t\t\t// object will only return the timezone offset for the current locale, so we\n\t\t\t\t// adjust it accordingly.  If not using timezone option this won't matter..\n\t\t\t\tif (tp_inst.timezone != null) {\n\t\t\t\t\t// look out for DST if tz wasn't specified\n\t\t\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\n\t\t\t\t\t\ttp_inst.timezone = date.getTimezoneOffset() * -1;\n\t\t\t\t\t}\n\t\t\t\t\tdate = $.timepicker.timezoneAdjust(date, tp_inst.timezone, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn date;\n\t\t}\n\t\treturn this._base_getDateDatepicker(target, noDefault);\n\t};\n\n\t/*\n\t* override parseDate() because UI 1.8.14 throws an error about \"Extra characters\"\n\t* An option in datapicker to ignore extra format characters would be nicer.\n\t*/\n\t$.datepicker._base_parseDate = $.datepicker.parseDate;\n\t$.datepicker.parseDate = function (format, value, settings) {\n\t\tvar date;\n\t\ttry {\n\t\t\tdate = this._base_parseDate(format, value, settings);\n\t\t} catch (err) {\n\t\t\t// Hack!  The error message ends with a colon, a space, and\n\t\t\t// the \"extra\" characters.  We rely on that instead of\n\t\t\t// attempting to perfectly reproduce the parsing algorithm.\n\t\t\tif (err.indexOf(\":\") >= 0) {\n\t\t\t\tdate = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(':') - 2)), settings);\n\t\t\t\t$.timepicker.log(\"Error parsing the date string: \" + err + \"\\ndate string = \" + value + \"\\ndate format = \" + format);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t\treturn date;\n\t};\n\n\t/*\n\t* override formatDate to set date with time to the input\n\t*/\n\t$.datepicker._base_formatDate = $.datepicker._formatDate;\n\t$.datepicker._formatDate = function (inst, day, month, year) {\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif (tp_inst) {\n\t\t\ttp_inst._updateDateTime(inst);\n\t\t\treturn tp_inst.$input.val();\n\t\t}\n\t\treturn this._base_formatDate(inst);\n\t};\n\n\t/*\n\t* override options setter to add time to maxDate(Time) and minDate(Time). MaxDate\n\t*/\n\t$.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;\n\t$.datepicker._optionDatepicker = function (target, name, value) {\n\t\tvar inst = this._getInst(target),\n\t\t\tname_clone;\n\t\tif (!inst) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar tp_inst = this._get(inst, 'timepicker');\n\t\tif (tp_inst) {\n\t\t\tvar min = null,\n\t\t\t\tmax = null,\n\t\t\t\tonselect = null,\n\t\t\t\toverrides = tp_inst._defaults.evnts,\n\t\t\t\tfns = {},\n\t\t\t\tprop,\n\t\t\t\tret,\n\t\t\t\toldVal,\n\t\t\t\t$target;\n\t\t\tif (typeof name === 'string') { // if min/max was set with the string\n\t\t\t\tif (name === 'minDate' || name === 'minDateTime') {\n\t\t\t\t\tmin = value;\n\t\t\t\t} else if (name === 'maxDate' || name === 'maxDateTime') {\n\t\t\t\t\tmax = value;\n\t\t\t\t} else if (name === 'onSelect') {\n\t\t\t\t\tonselect = value;\n\t\t\t\t} else if (overrides.hasOwnProperty(name)) {\n\t\t\t\t\tif (typeof (value) === 'undefined') {\n\t\t\t\t\t\treturn overrides[name];\n\t\t\t\t\t}\n\t\t\t\t\tfns[name] = value;\n\t\t\t\t\tname_clone = {}; //empty results in exiting function after overrides updated\n\t\t\t\t}\n\t\t\t} else if (typeof name === 'object') { //if min/max was set with the JSON\n\t\t\t\tif (name.minDate) {\n\t\t\t\t\tmin = name.minDate;\n\t\t\t\t} else if (name.minDateTime) {\n\t\t\t\t\tmin = name.minDateTime;\n\t\t\t\t} else if (name.maxDate) {\n\t\t\t\t\tmax = name.maxDate;\n\t\t\t\t} else if (name.maxDateTime) {\n\t\t\t\t\tmax = name.maxDateTime;\n\t\t\t\t}\n\t\t\t\tfor (prop in overrides) {\n\t\t\t\t\tif (overrides.hasOwnProperty(prop) && name[prop]) {\n\t\t\t\t\t\tfns[prop] = name[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (prop in fns) {\n\t\t\t\tif (fns.hasOwnProperty(prop)) {\n\t\t\t\t\toverrides[prop] = fns[prop];\n\t\t\t\t\tif (!name_clone) { name_clone = $.extend({}, name); }\n\t\t\t\t\tdelete name_clone[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (name_clone && isEmptyObject(name_clone)) { return; }\n\t\t\tif (min) { //if min was set\n\t\t\t\tif (min === 0) {\n\t\t\t\t\tmin = new Date();\n\t\t\t\t} else {\n\t\t\t\t\tmin = new Date(min);\n\t\t\t\t}\n\t\t\t\ttp_inst._defaults.minDate = min;\n\t\t\t\ttp_inst._defaults.minDateTime = min;\n\t\t\t} else if (max) { //if max was set\n\t\t\t\tif (max === 0) {\n\t\t\t\t\tmax = new Date();\n\t\t\t\t} else {\n\t\t\t\t\tmax = new Date(max);\n\t\t\t\t}\n\t\t\t\ttp_inst._defaults.maxDate = max;\n\t\t\t\ttp_inst._defaults.maxDateTime = max;\n\t\t\t} else if (onselect) {\n\t\t\t\ttp_inst._defaults.onSelect = onselect;\n\t\t\t}\n\n\t\t\t// Datepicker will override our date when we call _base_optionDatepicker when\n\t\t\t// calling minDate/maxDate, so we will first grab the value, call\n\t\t\t// _base_optionDatepicker, then set our value back.\n\t\t\tif(min || max){\n\t\t\t\t$target = $(target);\n\t\t\t\toldVal = $target.datetimepicker('getDate');\n\t\t\t\tret = this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\n\t\t\t\t$target.datetimepicker('setDate', oldVal);\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t\tif (value === undefined) {\n\t\t\treturn this._base_optionDatepicker.call($.datepicker, target, name);\n\t\t}\n\t\treturn this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\n\t};\n\n\t/*\n\t* jQuery isEmptyObject does not check hasOwnProperty - if someone has added to the object prototype,\n\t* it will return false for all objects\n\t*/\n\tvar isEmptyObject = function (obj) {\n\t\tvar prop;\n\t\tfor (prop in obj) {\n\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\t/*\n\t* jQuery extend now ignores nulls!\n\t*/\n\tvar extendRemove = function (target, props) {\n\t\t$.extend(target, props);\n\t\tfor (var name in props) {\n\t\t\tif (props[name] === null || props[name] === undefined) {\n\t\t\t\ttarget[name] = props[name];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t};\n\n\t/*\n\t* Determine by the time format which units are supported\n\t* Returns an object of booleans for each unit\n\t*/\n\tvar detectSupport = function (timeFormat) {\n\t\tvar tf = timeFormat.replace(/'.*?'/g, '').toLowerCase(), // removes literals\n\t\t\tisIn = function (f, t) { // does the format contain the token?\n\t\t\t\t\treturn f.indexOf(t) !== -1 ? true : false;\n\t\t\t\t};\n\t\treturn {\n\t\t\t\thour: isIn(tf, 'h'),\n\t\t\t\tminute: isIn(tf, 'm'),\n\t\t\t\tsecond: isIn(tf, 's'),\n\t\t\t\tmillisec: isIn(tf, 'l'),\n\t\t\t\tmicrosec: isIn(tf, 'c'),\n\t\t\t\ttimezone: isIn(tf, 'z'),\n\t\t\t\tampm: isIn(tf, 't') && isIn(timeFormat, 'h'),\n\t\t\t\tiso8601: isIn(timeFormat, 'Z')\n\t\t\t};\n\t};\n\n\t/*\n\t* Converts 24 hour format into 12 hour\n\t* Returns 12 hour without leading 0\n\t*/\n\tvar convert24to12 = function (hour) {\n\t\thour %= 12;\n\n\t\tif (hour === 0) {\n\t\t\thour = 12;\n\t\t}\n\n\t\treturn String(hour);\n\t};\n\n\tvar computeEffectiveSetting = function (settings, property) {\n\t\treturn settings && settings[property] ? settings[property] : $.timepicker._defaults[property];\n\t};\n\n\t/*\n\t* Splits datetime string into date and time substrings.\n\t* Throws exception when date can't be parsed\n\t* Returns {dateString: dateString, timeString: timeString}\n\t*/\n\tvar splitDateTime = function (dateTimeString, timeSettings) {\n\t\t// The idea is to get the number separator occurrences in datetime and the time format requested (since time has\n\t\t// fewer unknowns, mostly numbers and am/pm). We will use the time pattern to split.\n\t\tvar separator = computeEffectiveSetting(timeSettings, 'separator'),\n\t\t\tformat = computeEffectiveSetting(timeSettings, 'timeFormat'),\n\t\t\ttimeParts = format.split(separator), // how many occurrences of separator may be in our format?\n\t\t\ttimePartsLen = timeParts.length,\n\t\t\tallParts = dateTimeString.split(separator),\n\t\t\tallPartsLen = allParts.length;\n\n\t\tif (allPartsLen > 1) {\n\t\t\treturn {\n\t\t\t\tdateString: allParts.splice(0, allPartsLen - timePartsLen).join(separator),\n\t\t\t\ttimeString: allParts.splice(0, timePartsLen).join(separator)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tdateString: dateTimeString,\n\t\t\ttimeString: ''\n\t\t};\n\t};\n\n\t/*\n\t* Internal function to parse datetime interval\n\t* Returns: {date: Date, timeObj: Object}, where\n\t*   date - parsed date without time (type Date)\n\t*   timeObj = {hour: , minute: , second: , millisec: , microsec: } - parsed time. Optional\n\t*/\n\tvar parseDateTimeInternal = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\n\t\tvar date,\n\t\t\tparts,\n\t\t\tparsedTime;\n\n\t\tparts = splitDateTime(dateTimeString, timeSettings);\n\t\tdate = $.datepicker._base_parseDate(dateFormat, parts.dateString, dateSettings);\n\n\t\tif (parts.timeString === '') {\n\t\t\treturn {\n\t\t\t\tdate: date\n\t\t\t};\n\t\t}\n\n\t\tparsedTime = $.datepicker.parseTime(timeFormat, parts.timeString, timeSettings);\n\n\t\tif (!parsedTime) {\n\t\t\tthrow 'Wrong time format';\n\t\t}\n\n\t\treturn {\n\t\t\tdate: date,\n\t\t\ttimeObj: parsedTime\n\t\t};\n\t};\n\n\t/*\n\t* Internal function to set timezone_select to the local timezone\n\t*/\n\tvar selectLocalTimezone = function (tp_inst, date) {\n\t\tif (tp_inst && tp_inst.timezone_select) {\n\t\t\tvar now = date || new Date();\n\t\t\ttp_inst.timezone_select.val(-now.getTimezoneOffset());\n\t\t}\n\t};\n\n\t/*\n\t* Create a Singleton Instance\n\t*/\n\t$.timepicker = new Timepicker();\n\n\t/**\n\t * Get the timezone offset as string from a date object (eg '+0530' for UTC+5.5)\n\t * @param {number} tzMinutes if not a number, less than -720 (-1200), or greater than 840 (+1400) this value is returned\n\t * @param {boolean} iso8601 if true formats in accordance to iso8601 \"+12:45\"\n\t * @return {string}\n\t */\n\t$.timepicker.timezoneOffsetString = function (tzMinutes, iso8601) {\n\t\tif (isNaN(tzMinutes) || tzMinutes > 840 || tzMinutes < -720) {\n\t\t\treturn tzMinutes;\n\t\t}\n\n\t\tvar off = tzMinutes,\n\t\t\tminutes = off % 60,\n\t\t\thours = (off - minutes) / 60,\n\t\t\tiso = iso8601 ? ':' : '',\n\t\t\ttz = (off >= 0 ? '+' : '-') + ('0' + Math.abs(hours)).slice(-2) + iso + ('0' + Math.abs(minutes)).slice(-2);\n\n\t\tif (tz === '+00:00') {\n\t\t\treturn 'Z';\n\t\t}\n\t\treturn tz;\n\t};\n\n\t/**\n\t * Get the number in minutes that represents a timezone string\n\t * @param  {string} tzString formatted like \"+0500\", \"-1245\", \"Z\"\n\t * @return {number} the offset minutes or the original string if it doesn't match expectations\n\t */\n\t$.timepicker.timezoneOffsetNumber = function (tzString) {\n\t\tvar normalized = tzString.toString().replace(':', ''); // excuse any iso8601, end up with \"+1245\"\n\n\t\tif (normalized.toUpperCase() === 'Z') { // if iso8601 with Z, its 0 minute offset\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (!/^(\\-|\\+)\\d{4}$/.test(normalized)) { // possibly a user defined tz, so just give it back\n\t\t\treturn parseInt(tzString, 10);\n\t\t}\n\n\t\treturn ((normalized.substr(0, 1) === '-' ? -1 : 1) * // plus or minus\n\t\t\t\t\t((parseInt(normalized.substr(1, 2), 10) * 60) + // hours (converted to minutes)\n\t\t\t\t\tparseInt(normalized.substr(3, 2), 10))); // minutes\n\t};\n\n\t/**\n\t * No way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)\n\t * @param  {Date} date\n\t * @param  {string} fromTimezone formatted like \"+0500\", \"-1245\"\n\t * @param  {string} toTimezone formatted like \"+0500\", \"-1245\"\n\t * @return {Date}\n\t */\n\t$.timepicker.timezoneAdjust = function (date, fromTimezone, toTimezone) {\n\t\tvar fromTz = $.timepicker.timezoneOffsetNumber(fromTimezone);\n\t\tvar toTz = $.timepicker.timezoneOffsetNumber(toTimezone);\n\t\tif (!isNaN(toTz)) {\n\t\t\tdate.setMinutes(date.getMinutes() + (-fromTz) - (-toTz));\n\t\t}\n\t\treturn date;\n\t};\n\n\t/**\n\t * Calls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\n\t * enforce date range limits.\n\t * n.b. The input value must be correctly formatted (reformatting is not supported)\n\t * @param  {Element} startTime\n\t * @param  {Element} endTime\n\t * @param  {Object} options Options for the timepicker() call\n\t * @return {jQuery}\n\t */\n\t$.timepicker.timeRange = function (startTime, endTime, options) {\n\t\treturn $.timepicker.handleRange('timepicker', startTime, endTime, options);\n\t};\n\n\t/**\n\t * Calls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\n\t * enforce date range limits.\n\t * @param  {Element} startTime\n\t * @param  {Element} endTime\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n\t * @param  {string} method Can be used to specify the type of picker to be added\n\t * @return {jQuery}\n\t */\n\t$.timepicker.datetimeRange = function (startTime, endTime, options) {\n\t\t$.timepicker.handleRange('datetimepicker', startTime, endTime, options);\n\t};\n\n\t/**\n\t * Calls `datepicker` on the `startTime` and `endTime` elements, and configures them to\n\t * enforce date range limits.\n\t * @param  {Element} startTime\n\t * @param  {Element} endTime\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n\t * @return {jQuery}\n\t */\n\t$.timepicker.dateRange = function (startTime, endTime, options) {\n\t\t$.timepicker.handleRange('datepicker', startTime, endTime, options);\n\t};\n\n\t/**\n\t * Calls `method` on the `startTime` and `endTime` elements, and configures them to\n\t * enforce date range limits.\n\t * @param  {string} method Can be used to specify the type of picker to be added\n\t * @param  {Element} startTime\n\t * @param  {Element} endTime\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\n\t * @return {jQuery}\n\t */\n\t$.timepicker.handleRange = function (method, startTime, endTime, options) {\n\t\toptions = $.extend({}, {\n\t\t\tminInterval: 0, // min allowed interval in milliseconds\n\t\t\tmaxInterval: 0, // max allowed interval in milliseconds\n\t\t\tstart: {},      // options for start picker\n\t\t\tend: {}         // options for end picker\n\t\t}, options);\n\n\t\t// for the mean time this fixes an issue with calling getDate with timepicker()\n\t\tvar timeOnly = false;\n\t\tif(method === 'timepicker'){\n\t\t\ttimeOnly = true;\n\t\t\tmethod = 'datetimepicker';\n\t\t}\n\n\t\tfunction checkDates(changed, other) {\n\t\t\tvar startdt = startTime[method]('getDate'),\n\t\t\t\tenddt = endTime[method]('getDate'),\n\t\t\t\tchangeddt = changed[method]('getDate');\n\n\t\t\tif (startdt !== null) {\n\t\t\t\tvar minDate = new Date(startdt.getTime()),\n\t\t\t\t\tmaxDate = new Date(startdt.getTime());\n\n\t\t\t\tminDate.setMilliseconds(minDate.getMilliseconds() + options.minInterval);\n\t\t\t\tmaxDate.setMilliseconds(maxDate.getMilliseconds() + options.maxInterval);\n\n\t\t\t\tif (options.minInterval > 0 && minDate > enddt) { // minInterval check\n\t\t\t\t\tendTime[method]('setDate', minDate);\n\t\t\t\t}\n\t\t\t\telse if (options.maxInterval > 0 && maxDate < enddt) { // max interval check\n\t\t\t\t\tendTime[method]('setDate', maxDate);\n\t\t\t\t}\n\t\t\t\telse if (startdt > enddt) {\n\t\t\t\t\tother[method]('setDate', changeddt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction selected(changed, other, option) {\n\t\t\tif (!changed.val()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar date = changed[method].call(changed, 'getDate');\n\t\t\tif (date !== null && options.minInterval > 0) {\n\t\t\t\tif (option === 'minDate') {\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() + options.minInterval);\n\t\t\t\t}\n\t\t\t\tif (option === 'maxDate') {\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() - options.minInterval);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (date.getTime) {\n\t\t\t\tother[method].call(other, 'option', option, date);\n\t\t\t}\n\t\t}\n\n\t\t$.fn[method].call(startTime, $.extend({\n\t\t\ttimeOnly: timeOnly,\n\t\t\tonClose: function (dateText, inst) {\n\t\t\t\tcheckDates($(this), endTime);\n\t\t\t},\n\t\t\tonSelect: function (selectedDateTime) {\n\t\t\t\tselected($(this), endTime, 'minDate');\n\t\t\t}\n\t\t}, options, options.start));\n\t\t$.fn[method].call(endTime, $.extend({\n\t\t\ttimeOnly: timeOnly,\n\t\t\tonClose: function (dateText, inst) {\n\t\t\t\tcheckDates($(this), startTime);\n\t\t\t},\n\t\t\tonSelect: function (selectedDateTime) {\n\t\t\t\tselected($(this), startTime, 'maxDate');\n\t\t\t}\n\t\t}, options, options.end));\n\n\t\tcheckDates(startTime, endTime);\n\n\t\tselected(startTime, endTime, 'minDate');\n\t\tselected(endTime, startTime, 'maxDate');\n\n\t\treturn $([startTime.get(0), endTime.get(0)]);\n\t};\n\n\t/**\n\t * Log error or data to the console during error or debugging\n\t * @param  {Object} err pass any type object to log to the console during error or debugging\n\t * @return {void}\n\t */\n\t$.timepicker.log = function () {\n\t\t// Older IE (9, maybe 10) throw error on accessing `window.console.log.apply`, so check first.\n\t\tif (window.console && window.console.log && window.console.log.apply) {\n\t\t\twindow.console.log.apply(window.console, Array.prototype.slice.call(arguments));\n\t\t}\n\t};\n\n\t/*\n\t * Add util object to allow access to private methods for testability.\n\t */\n\t$.timepicker._util = {\n\t\t_extendRemove: extendRemove,\n\t\t_isEmptyObject: isEmptyObject,\n\t\t_convert24to12: convert24to12,\n\t\t_detectSupport: detectSupport,\n\t\t_selectLocalTimezone: selectLocalTimezone,\n\t\t_computeEffectiveSetting: computeEffectiveSetting,\n\t\t_splitDateTime: splitDateTime,\n\t\t_parseDateTimeInternal: parseDateTimeInternal\n\t};\n\n\t/*\n\t* Microsecond support\n\t*/\n\tif (!Date.prototype.getMicroseconds) {\n\t\tDate.prototype.microseconds = 0;\n\t\tDate.prototype.getMicroseconds = function () { return this.microseconds; };\n\t\tDate.prototype.setMicroseconds = function (m) {\n\t\t\tthis.setMilliseconds(this.getMilliseconds() + Math.floor(m / 1000));\n\t\t\tthis.microseconds = m % 1000;\n\t\t\treturn this;\n\t\t};\n\t}\n\n\t/*\n\t* Keep up with the version\n\t*/\n\t$.timepicker.version = \"1.6.3\";\n\n}));\n"]}